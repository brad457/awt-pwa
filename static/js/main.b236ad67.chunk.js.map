{"version":3,"sources":["Store.js","components/Nav.js","components/StorageInfo.js","components/DownloadItem.js","components/DownloadInProgress.js","routes/DownloadManager.js","routes/Home.js","components/MediaItem.js","routes/MediaBrowser.js","routes/MediaPlayer.js","App.js","serviceWorker.js","index.js"],"names":["Store","React","createContext","initialState","isInit","isSupported","videos","isDownloadInProgress","downloadInProgress","content","progress","reducer","state","action","type","Object","objectSpread","value","Nav","_ref","routes","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","_useState3","window","navigator","onLine","_useState4","isOnline","setIsOnline","setIsOnlineTrue","setIsOnlineFalse","useEffect","addEventListener","removeEventListener","react_default","a","createElement","className","react_router_dom","exact","to","aria-expanded","aria-label","onClick","concat","map","_ref2","key","label","path","activeClassName","disabled","getStorageEstimate","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","storage","estimate","then","quota","usage","Math","round","stop","apply","this","arguments","StorageInfo","storageInfo","setStorageInfo","storageEstimateInterval","setInterval","clearInterval","style","marginTop","height","role","width","aria-valuenow","aria-valuemin","aria-valuemax","DownloadItem","id","removeMedia","title","downloadedOn","href","DownloadInProgress","useContext","react","appMetadata","marginBottom","DownloadManager","downloadList","setDownloadList","list","offlineUri","remove","_x","components_DownloadInProgress","index","components_DownloadItem","done","downloaded","components_StorageInfo","max","current","Home","MediaItem","tagline","poster","onClickDownload","allowDownload","background","src","alt","minHeight","opacity","borderRadius","MediaBrowser","history","downloadInProgres","paddingBottom","placeholder","htmlFor","video","components_MediaItem","assign","videoId","alert","find","v","store","manifestUri","Date","push","downloadVideo","MediaPlayer","match","videoEl","useRef","metadata","params","player","shaka","Player","onError","error","console","code","detail","mode","load","catch","offlineVideo","destroy","goBack","aria-hidden","ref","maxHeight","controls","autoPlay","App","_useContext","dispatch","init","data","dataJSON","progressCallback","fetch","sent","json","polyfill","installAll","offline","Storage","configure","getStoreInProgress","isBrowserSupported","support","onUpdate","scrollTo","components_Nav","react_router","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onSuccess","ReactDOM","render","children","_React$useReducer","useReducer","_React$useReducer2","Provider","src_App_0","document","getElementById","URL","process","origin","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b236ad67.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Store = React.createContext();\n\nconst initialState = {\n  isInit: false,\n  isSupported: true,\n  videos: [],\n  isDownloadInProgress: false,\n  downloadInProgress: {\n    content: null,\n    progress: 0,\n  },\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT_DONE':\n      return {\n        ...state,\n        isInit: action.isInit,\n        isSupported: action.isSupported,\n        videos: action.videos,\n      };\n    case 'SET_IS_DOWNLOAD_IN_PROGRESS':\n      if (state.isDownloadInProgress === action.value) return state;\n      return {\n        ...state,\n        isDownloadInProgress: action.value,\n      };\n    case 'DOWNLOAD_PROGRESS':\n      return {\n        ...state,\n        downloadInProgress: {\n          content: action.content,\n          progress: action.progress,\n        },\n      }\n    default:\n      return state;\n  }\n}\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <Store.Provider value={value}>\n      {children}\n    </Store.Provider>\n  );\n};\n\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = ({ routes }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOnline, setIsOnline] = useState(window.navigator.onLine);\n\n  const setIsOnlineTrue = () => setIsOnline(true);\n  const setIsOnlineFalse = () => setIsOnline(false);\n\n  useEffect(() => { // listen to online status\n    window.addEventListener('online', setIsOnlineTrue);\n    window.addEventListener('offline', setIsOnlineFalse);\n    return () => { // clean up on component unmount\n      window.removeEventListener(\"online\", setIsOnlineTrue);\n      window.removeEventListener('offline', setIsOnlineFalse);\n    };\n  },[]);\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\">\n      <NavLink\n        className=\"navbar-brand\"\n        exact\n        to=\"/\"\n      >\n        Shaka-O-Matik\n      </NavLink>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        aria-expanded={isOpen}\n        aria-label=\"Toggle navigation\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className={`collapse navbar-collapse ${isOpen ? 'show': ''}`}>\n        <div className=\"navbar-nav\">\n          {routes.map(({\n            exact,\n            key,\n            label,\n            path,\n          }) => (\n            <NavLink\n              activeClassName=\"active\"\n              className=\"nav-item nav-link\"\n              exact={exact}\n              key={key}\n              onClick={() => setIsOpen(false)}\n              to={path}\n            >\n              {label}<span className=\"sr-only\">(current)</span>\n            </NavLink>\n          ))}\n        </div>\n      </div>\n      {isOnline\n        ? <button type=\"button\" className=\"btn btn-success\" disabled>Online</button>\n        : <button type=\"button\" className=\"btn btn-danger\" disabled>Offline</button>\n      }\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    exact: PropTypes.bool,\n  })).isRequired,\n}\n\nexport default Nav;\n","import React, { useEffect, useState } from 'react';\n\nconst getStorageEstimate = async () => {\n  return navigator.storage.estimate().then(({ quota, usage }) => ({ quota: Math.round(quota/1000000), usage: Math.round(usage/1000000) }));\n}\n\nconst StorageInfo = () => {\n  const [storageInfo, setStorageInfo] = useState({ usage: 0, quota: 100 })\n\n  useEffect(() => {\n    // AFAIK it's impossible to listen to 'storage' events on the same page.\n    // These events are only fire if changes are made to indexedDB in another tab,\n    // so I just added an interval to check the storage estimate every x seconds.\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      const storageEstimateInterval = setInterval(() => {\n        getStorageEstimate().then(setStorageInfo);\n      }, 5000);\n      getStorageEstimate().then(setStorageInfo);\n      return () => clearInterval(storageEstimateInterval);\n    }\n  }, []);\n\n  return (\n    <div className=\"card\" style={{ marginTop: '1rem' }}>\n      <div className=\"card-body\">\n        You have {storageInfo.quota}MB of accessible storage and currently use {storageInfo.usage}MB.\n        <div className=\"progress\" style={{ height: '2rem' }}>\n          <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ width: `${storageInfo.usage/storageInfo.quota*100}%` }} aria-valuenow={storageInfo.usage} aria-valuemin=\"0\" aria-valuemax={storageInfo.quota}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StorageInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DownloadItem = ({\n  id,\n  removeMedia,\n  title,\n  downloadedOn\n}) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>{downloadedOn}</small>\n    <hr />\n    <div className=\"d-flex justify-content-between\">\n      <a\n        className=\"btn btn-primary\"\n        href={`/#/offline/${id}`}\n        role=\"button\"\n      >Watch</a>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={removeMedia}\n      >Remove</button>\n    </div>\n  </li>\n);\n\nDownloadItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  removeMedia: PropTypes.func.isRequired,\n};\n\nexport default DownloadItem;\n","import React, { Fragment, useContext } from 'react';\nimport { Store } from '../Store';\n\nconst DownloadInProgress = () => {\n  const { state } = useContext(Store);\n  const { downloadInProgress } = state;\n\n  return (\n    <Fragment>\n      {downloadInProgress.content && (\n        <li className=\"list-group-item\">\n          {downloadInProgress.content.appMetadata.title}\n          <br />\n          <small>{downloadInProgress.content.appMetadata.downloadedOn}</small>\n          <hr />\n          <div className=\"progress\" style={{ marginBottom: '0.5rem' }}>\n            <div\n              className=\"progress-bar progress-bar-striped progress-bar-animated\"\n              role=\"progressbar\"\n              aria-valuenow={downloadInProgress.progress * 100}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: `${downloadInProgress.progress * 100}%` }}\n            />\n          </div>\n        </li>\n      )}\n    </Fragment>\n  );\n};\n\nexport default DownloadInProgress;\n","import React, { Fragment, useEffect, useState, useContext } from 'react';\nimport { Store } from '../Store';\nimport StorageInfo from '../components/StorageInfo';\nimport DownloadItem from '../components/DownloadItem';\nimport DownloadInProgress from '../components/DownloadInProgress';\n\nconst DownloadManager = () => {\n  const [downloadList, setDownloadList] = useState([]);\n  const { state } = useContext(Store);\n  const { isDownloadInProgress } = state;\n  \n  useEffect(() => {\n    window.storage.list().then(setDownloadList); // get finished downloads\n  }, []);\n\n  const removeMedia = async (offlineUri) => {\n    await window.storage.remove(offlineUri);\n    window.storage.list().then(setDownloadList);\n  };\n\n  return (\n    <Fragment>\n      <ul className=\"list-group\">\n        {isDownloadInProgress && <DownloadInProgress />}\n        {downloadList.map(({ appMetadata, offlineUri }, index) => ( // last one first\n          <DownloadItem\n            title={appMetadata.title}\n            key={`download_${index}_${appMetadata.title}`}\n            done\n            id={appMetadata.id}\n            removeMedia={() => removeMedia(offlineUri)}\n            downloadedOn={appMetadata.downloaded}\n          />\n        ))}\n      </ul>\n      <StorageInfo max={2000} current={500} />\n    </Fragment>\n  );\n};\n\nexport default DownloadManager;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"jumbotron\">\n    <h1>Hello, world!</h1>\n    <p className=\"lead\">This is an App that demonstates offline storage and playback of videos with the Shaka player.</p>\n    <hr />\n      <p>There are many bugs and few features.</p>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MediaItem = ({\n  title,\n  tagline,\n  id,\n  poster,\n  onClickDownload,\n  allowDownload,\n}) => (\n  <div className=\"col-md-6\" style={{ marginBottom: '1rem' }}>\n    <div className=\"card bg-dark text-white\" style={{ background: 'black' }}>\n      <img\n        className=\"card-img-top\"\n        src={poster}\n        alt={`image_${title}`}\n        style={{ minHeight: '10rem', opacity: '0.4', borderRadius: '.25rem' }}\n      />\n      <div className=\"card-img-overlay d-flex justify-content-between flex-column\">\n        <h5 className=\"card-title\">{title}</h5>\n        <p className=\"card-text\">{tagline}</p>\n        <div className=\"text-right\">\n            {allowDownload && (\n              <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={onClickDownload}\n                >\n                  Download\n                </button>\n                <a className=\"btn btn-primary\" href={`/#/stream/${id}`} role=\"button\">Watch now!</a>\n            </div>\n            )}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nMediaItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  tagline: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  onClickDownload: PropTypes.func.isRequired,\n  allowDownload: PropTypes.bool.isRequired,\n};\n\nexport default MediaItem;\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { Store } from '../Store';\nimport MediaItem from '../components/MediaItem';\n\nconst MediaBrowser = ({ history }) => {\n  const { state } = useContext(Store);\n\n  const { downloadInProgres, videos } = state;\n\n  const downloadVideo = (videoId) => {\n    if (!downloadInProgres) {\n      const video = videos.find(v => v.id === videoId);\n      window.storage.store(video.manifestUri, {\n        downloaded: Date(),\n        id: video.id,\n        title: video.title,\n      });\n      history.push('/downloads');\n    } else alert('Download already in Progress!');\n  };\n\n  const [isOnline, setIsOnline] = useState(window.navigator.onLine);\n\n  const setIsOnlineTrue = () => setIsOnline(true);\n  const setIsOnlineFalse = () => setIsOnline(false);\n\n  useEffect(() => { // listen to online status\n    window.addEventListener('online', setIsOnlineTrue);\n    window.addEventListener('offline', setIsOnlineFalse);\n    return () => { // clean up on component unmount\n      window.removeEventListener(\"online\", setIsOnlineTrue);\n      window.removeEventListener('offline', setIsOnlineFalse);\n    };\n  },[]);\n\n  return (\n    <Fragment>\n      <form className=\"form-inline\" style={{ paddingBottom: '1rem' }}>\n        <input className=\"form-control\" type=\"text\" placeholder=\"Search\" />\n        <div className=\"form-check form-check-inline\">\n          <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n          <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n            Show downloaded only\n          </label>\n        </div>\n      </form>\n      <div className=\"row\">\n        {videos.map((video, index) => (\n          <MediaItem\n            {...video}\n            key={`media_${index}_${video.title}`}\n            onClickDownload={() => downloadVideo(video.id)}\n            allowDownload={!!isOnline}\n          />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MediaBrowser;\n","import React, { useEffect, useRef, useContext } from 'react';\nimport { Store } from '../Store';\n\nconst MediaPlayer = ({ match, history }) => {\n  const videoEl = useRef(null); // reference to the <video> element\n\n  const { state } = useContext(Store);\n  const { videos } = state;\n  const metadata = videos.find((video => video.id === match.params.id)); // get id from URL, metadata from datastore\n\n  useEffect(() => {\n    const player = new window.shaka.Player(videoEl.current); // initialize player on component mount\n\n    const onError = (error) => { // log errors\n      console.error('Error code', error.code, 'object', error);\n    }\n\n    player.addEventListener('error', ({ detail }) => onError(detail));\n    if (match.params.mode === 'stream') {\n      player.load(metadata.manifestUri).catch(onError);\n    } else { // mode === 'offline'\n      // get offlineUri from storage\n      window.storage.list().then((list) => {\n        const offlineVideo = list.find(video => video.appMetadata.id === match.params.id);\n        player.load(offlineVideo.offlineUri); // start playing from storage\n      });\n    }\n    return () => player.destroy(); // clean up when the component is unmounted.\n  }, [match,metadata]); // run this effect only when it is first mounted or these values change\n\n  return (\n    <div className=\"card bg-light\">\n      <div className=\"card-header\">\n        {metadata ? metadata.title : '404'}\n        <button\n          type=\"button\"\n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={history.goBack}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"card-body\">\n        {metadata ? (\n          <video\n            ref={videoEl}\n            style={{ width: '100%', maxHeight: '80vh' }}\n            poster={metadata.poster}\n            controls\n            autoPlay\n          />\n        ) : 'Video not found.'}\n      </div>\n    </div>\n  );\n};\n\nexport default MediaPlayer;\n","import React, { useEffect, useContext, Fragment } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Store } from './Store';\nimport './App.css';\nimport Nav from './components/Nav';\nimport DownloadManager from './routes/DownloadManager';\nimport Home from './routes/Home';\nimport MediaBrowser from './routes/MediaBrowser';\nimport MediaPlayer from './routes/MediaPlayer';\n\nconst routes = [\n  {\n    exact: true,\n    key: 'media',\n    label: 'Media',\n    path: '/media',\n  },\n  {\n    exact: true,\n    key: 'downloads',\n    label: 'Downloads',\n    path: '/downloads',\n  },\n];\n\nconst App = () => { \n  const { state, dispatch } = useContext(Store);\n\n  const init = async () => {\n    // fetch video data\n    const data = await fetch('data/videos.json');\n    const dataJSON = await data.json();\n\n    // init shaka\n    const shaka = window.shaka;\n    shaka.polyfill.installAll();\n\n    // initialize shaka storage\n    window.storage = new shaka.offline.Storage();\n    // make shaka dispatch progress events so that we can have a progress bar when downloading\n    // this will probably no longer be necessary in the next version of shaka\n    const progressCallback = (content, progress) => {\n      dispatch({\n        type: 'DOWNLOAD_PROGRESS',\n        content,\n        progress, \n      });\n    };\n    window.storage.configure({ progressCallback });\n\n    // start interval that updates the state every second\n    // this is a dirty hack and I hope shaka will provide\n    // better tools in the future\n    setInterval(() => {\n      dispatch({\n        type: 'SET_IS_DOWNLOAD_IN_PROGRESS',\n        value: window.storage.getStoreInProgress(),\n      });\n    }, 1000);\n\n    return dispatch({\n      type: 'INIT_DONE',\n      videos: dataJSON,\n      isInit: true,\n      isSupported: shaka.Player.isBrowserSupported() && shaka.offline.Storage.support(),\n    });\n  };\n\n  useEffect(() => {\n    !state.isInit && init();\n  });\n\n  const { isInit, isSupported } = state;\n\n  if (!isInit) return <p>loading...</p>;\n\n  return (\n    <Router onUpdate={() => window.scrollTo(0, 0)}>\n      <div className=\"App\">\n        <Nav routes={routes} />\n        <main className=\"container\">\n          {!isSupported ? (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              <h4 className=\"alert-heading\">Browser not supported!</h4>\n              <hr />\n              Unfortunately your browser does not support all required technologies.\n            </div>\n          ) : (\n            <Fragment>\n              <Route\n                component={Home}\n                exact\n                path=\"/\"\n              />\n              <Route\n                component={MediaBrowser}\n                exact\n                path=\"/media\"\n              />\n              <Route\n                component={DownloadManager}\n                exact\n                path=\"/downloads\"\n              />\n              <Route\n                component={MediaPlayer}\n                exact\n                path=\"/:mode(stream|offline)/:id\"\n              />\n            </Fragment>\n          )}\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './Store';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}