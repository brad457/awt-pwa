{"version":3,"sources":["Store.js","components/LoadingScreen.js","components/Nav.js","components/StorageInfo.js","components/DownloadItem.js","components/DownloadInProgress.js","routes/DownloadManager.js","routes/Home.js","components/MediaItem.js","routes/MediaBrowser.js","routes/MediaPlayer.js","routes/Configuration.js","App.js","serviceWorker.js","index.js"],"names":["Store","React","createContext","cookies","Cookies","initialState","configuration","language","subtitles","dbIndex","isInit","isSupported","videos","player","storage","init","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","videosJsonPromise","isShakaPlayerSupported","isShakaStorageSupported","storageListPromise","onError","trackSelectionCallback","progressCallback","_ref3","_ref4","wrap","_context","prev","next","fetch","then","response","json","shaka","polyfill","installAll","Player","isBrowserSupported","offline","Storage","support","window","alert","list","error","console","code","addEventListener","_ref2","detail","get","tracks","found","filter","track","type","sort","b","bandwidth","log","pop","content","progress","dispatchEvent","CustomEvent","configure","preferredAudioLanguage","preferredTextLanguage","Promise","all","sent","slicedToArray","abrupt","payload","objectSpread","stop","_x","apply","this","arguments","reducer","state","_ref5","set","path","LoadingScreen","react_default","createElement","className","style","height","role","Nav","routes","_useState","useState","_useState2","isOpen","setIsOpen","_useState3","_useState4","isOnline","setIsOnline","setIsOnlineTrue","setIsOnlineFalse","useEffect","navigator","onLine","removeEventListener","react_router_dom","exact","to","aria-expanded","aria-label","onClick","concat","map","key","label","activeClassName","disabled","getStorageEstimate","estimate","quota","usage","Math","round","StorageInfo","storageInfo","setStorageInfo","storageEstimateInterval","setInterval","clearInterval","marginTop","width","aria-valuenow","aria-valuemin","aria-valuemax","DownloadItem","id","removeMedia","title","downloadedOn","DownloadInProgress","dateStarted","marginBottom","DownloadManager","_useContext","useContext","_useContext$state","_useState2$","setDownloadInProgress","newDbIndex","updateList","handleProgressEvent","event","_callee2","offlineUri","_context2","remove","debounced","useRef","debounce","_callee3","_context3","current","react","components_DownloadInProgress","appMetadata","downloaded","reverse","index","components_DownloadItem","done","components_StorageInfo","max","Home","MediaItem","onClickDownload","poster","tagline","background","src","alt","minHeight","opacity","borderRadius","MediaBrowser","history","searchTerm","setSearchTerm","paddingBottom","placeholder","onChange","e","target","value","video","includes","components_MediaItem","assign","videoId","getStoreInProgress","find","v","confirm","store","manifestUri","Date","push","downloadVideo","MediaPlayer","match","videoEl","metadata","params","videoElement","attach","mode","load","offlineVideo","detach","goBack","aria-hidden","ref","maxHeight","controls","autoPlay","languageOptions","subtitleOptions","Configuration","name","checked","htmlFor","App","onUpdate","scrollTo","components_Nav","paddingTop","react_router","component","components_LoadingScreen","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","catch","ReactDOM","render","_ref6","children","_useReducer","useReducer","_useReducer2","Provider","src_App","document","getElementById","URL","process","href","origin","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8ca1bdf1.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\nimport Cookies from 'universal-cookie';\nimport shaka from 'shaka-player';\n\nexport const Store = React.createContext();\nconst cookies = new Cookies();\nconst initialConfiguration = {\n  language: null,\n  subtitles: null,\n};\nconst initialState = {\n  configuration: initialConfiguration,\n  dbIndex: [],\n  isInit: false,\n  isSupported: true,\n  videos: [],\n  player: null,\n  storage: null,\n};\n \nconst init = async (dispatch) => {\n  const videosJsonPromise = fetch('data/videos.json').then(response => response.json());\n\n  shaka.polyfill.installAll();\n\n  const isShakaPlayerSupported = shaka.Player.isBrowserSupported();\n  const isShakaStorageSupported = shaka.offline.Storage.support();\n\n  window.alert(isShakaPlayerSupported);\n  window.alert(isShakaStorageSupported);\n\n  if (isShakaPlayerSupported && isShakaStorageSupported) {\n    const player = new shaka.Player();\n    const storage = new shaka.offline.Storage(player);\n    const storageListPromise = storage.list();\n\n    const onError = (error) => {\n      console.error('Error code', error.code, 'object', error);\n    };\n    player.addEventListener('error', ({ detail }) => onError(detail));\n\n    // get previous configuration from cookies\n    const configuration = {\n      language: cookies.get('userPreferredAudioLanguage'),\n      subtitles: cookies.get('userPreferredTextLanguage'),\n    };\n\n    const trackSelectionCallback = (tracks) => {\n      // This example stores the highest bandwidth variant.\n      //\n      // Note that this is just an example of an arbitrary algorithm, and not a best\n      // practice for storing content offline.  Decide what your app needs, or keep\n      // the default (user-pref-matching audio, best SD video, all text).\n      \n      const found = tracks\n        .filter(track => track.type === 'variant')\n        .sort((a, b) => a.bandwidth - b.bandwidth);\n      console.log(found);\n      return [found.pop()];\n    }\n\n    // make shaka dispatch progress events so that we can have a progress bar when downloading\n    const progressCallback = (content, progress) => window.dispatchEvent(new CustomEvent(\"storage-progress\", { detail: { content, progress }}));\n    player.configure({\n      offline: {\n        progressCallback,\n        trackSelectionCallback,\n      },\n      preferredAudioLanguage: configuration.language,\n      preferredTextLanguage: configuration.subtitles,\n    });\n\n    // get available videos from server\n    // and check offline storage (IndexedDB)\n    // simultaneously (both are async)\n    const [videos, dbIndex] = await Promise.all([\n      videosJsonPromise,\n      storageListPromise,\n    ]);\n\n    // start app\n    return dispatch({\n      type: 'INIT_DONE',\n      payload: {\n        configuration,\n        dbIndex,\n        isInit: true,\n        isSupported: isShakaPlayerSupported && isShakaStorageSupported,\n        player,\n        storage,\n        videos,\n      },\n    });\n  }\n\n  // not supported\n  return dispatch({\n    type: 'INIT_DONE',\n    payload: {\n      ...initialState,\n      isInit: true,\n      isSupported: false,\n    },\n  });\n};\n\nconst reducer = (state, { type, payload, dispatch }) => {\n  switch (type) {\n    case 'INIT':\n      init(dispatch);\n      return state;\n    case 'INIT_DONE':\n      return {\n        ...state,\n        isInit: payload.isInit,\n        isSupported: payload.isSupported,\n        videos: payload.videos,\n        dbIndex: payload.dbIndex,\n        configuration: payload.configuration,\n        player: payload.player,\n        storage: payload.storage,\n      };\n    case 'UPDATE_DB_INDEX':\n      return {\n        ...state,\n        dbIndex: payload.dbIndex,\n      };\n    case 'SET_CONFIG_LANGUAGE':\n      cookies.set('userPreferredAudioLanguage', payload, { path: '/' });\n      state.player.configure({ preferredAudioLanguage: payload });\n      return {\n        ...state,\n        configuration: {\n          ...state.configuration,\n          language: payload,\n        },\n      };\n    case 'SET_CONFIG_SUBTITLES':\n      cookies.set('userPreferredTextLanguage', payload, { path: '/' });\n      state.player.configure({ preferredTextLanguage: payload });\n      return {\n        ...state,\n        configuration: {\n          ...state.configuration,\n          subtitles: payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <Store.Provider value={value}>\n      {children}\n    </Store.Provider>\n  );\n};\n\n","import React from \"react\";\n\nconst LoadingScreen = () => (\n  <div className=\"container\" style={{ height: '100vh' }}>\n    <div className=\"row h-100 justify-content-center align-items-center\">\n      <div className=\"spinner-grow\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default LoadingScreen;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = ({ routes }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOnline, setIsOnline] = useState(false);\n\n  const setIsOnlineTrue = () => setIsOnline(true);\n  const setIsOnlineFalse = () => setIsOnline(false);\n\n  useEffect(() => {\n    setIsOnline(window.navigator.onLine);\n    window.addEventListener('online', setIsOnlineTrue);\n    window.addEventListener('offline', setIsOnlineFalse);\n\n    return () => {\n      window.removeEventListener('online', setIsOnlineTrue);\n      window.removeEventListener('offline', setIsOnlineFalse);\n    };\n  }, []);\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\">\n      <NavLink\n        className=\"navbar-brand\"\n        exact\n        to=\"/\"\n      >\n        Shaka-O-Matik\n      </NavLink>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        aria-expanded={isOpen}\n        aria-label=\"Toggle navigation\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className={`collapse navbar-collapse ${isOpen ? 'show': ''}`}>\n        <div className=\"navbar-nav\">\n          {routes.map(({\n            exact,\n            key,\n            label,\n            path,\n          }) => (\n            <NavLink\n              activeClassName=\"active\"\n              className=\"nav-item nav-link\"\n              exact={exact}\n              key={key}\n              onClick={() => setIsOpen(false)}\n              to={path}\n            >\n              {label}<span className=\"sr-only\">(current)</span>\n            </NavLink>\n          ))}\n        </div>\n      </div>\n      {isOnline\n        ? <button type=\"button\" className=\"btn btn-success\" disabled>Online</button>\n        : <button type=\"button\" className=\"btn btn-danger\" disabled>Offline</button>\n      }\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    exact: PropTypes.bool,\n  })).isRequired,\n}\n\nexport default Nav;\n","import React, { useEffect, useState } from 'react';\n\nconst getStorageEstimate = async () => {\n  return navigator.storage.estimate().then(({ quota, usage }) => ({ quota: Math.round(quota/1000000), usage: Math.round(usage/1000000) }));\n}\n\nconst StorageInfo = () => {\n  const [storageInfo, setStorageInfo] = useState({ usage: 0, quota: 100 })\n\n  useEffect(() => {\n    // AFAIK it's impossible to listen to 'storage' events on the same page.\n    // These events are only fire if changes are made to indexedDB in another tab,\n    // so I just added an interval to check the storage estimate every x seconds.\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      const storageEstimateInterval = setInterval(() => {\n        getStorageEstimate().then(setStorageInfo);\n      }, 5000);\n      getStorageEstimate().then(setStorageInfo);\n      return () => clearInterval(storageEstimateInterval);\n    }\n  }, []);\n\n  return (\n    <div className=\"card\" style={{ marginTop: '1rem' }}>\n      <div className=\"card-body\">\n        You have {storageInfo.quota}MB of accessible storage and currently use {storageInfo.usage}MB.\n        <div className=\"progress\" style={{ height: '2rem' }}>\n          <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ width: `${storageInfo.usage/storageInfo.quota*100}%` }} aria-valuenow={storageInfo.usage} aria-valuemin=\"0\" aria-valuemax={storageInfo.quota}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StorageInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst DownloadItem = ({\n  id,\n  removeMedia,\n  title,\n  downloadedOn\n}) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>{downloadedOn}</small>\n    <hr />\n    <div className=\"d-flex justify-content-between\">\n      <NavLink\n        className=\"btn btn-primary\"\n        to={`/offline/${id}`}\n      >Watch</NavLink>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={removeMedia}\n      >Remove</button>\n    </div>\n  </li>\n);\n\nDownloadItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  removeMedia: PropTypes.func.isRequired,\n};\n\nexport default DownloadItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DownloadInProgress = ({ title, dateStarted, progress }) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>{dateStarted}</small>\n    <hr />\n    <div className=\"progress\" style={{ marginBottom: '0.5rem' }}>\n      <div\n        className=\"progress-bar progress-bar-striped progress-bar-animated\"\n        role=\"progressbar\"\n        aria-valuenow={progress * 100}\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        style={{ width: `${progress * 100}%` }}\n      />\n    </div>\n  </li>\n);\n\nDownloadInProgress.propTypes = {\n  title: PropTypes.string.isRequired,\n  dateStarted: PropTypes.string.isRequired,\n  progress: PropTypes.number.isRequired,\n}\n\nexport default DownloadInProgress;\n","import React, {\n  Fragment,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport debounce from 'lodash/debounce';\nimport { Store } from '../Store';\nimport StorageInfo from '../components/StorageInfo';\nimport DownloadItem from '../components/DownloadItem';\nimport DownloadInProgress from '../components/DownloadInProgress';\n\nconst DownloadManager = () => {\n  const { state: { dbIndex, storage }, dispatch } = useContext(Store);\n  const [{ content, progress }, setDownloadInProgress] = useState({ content: null, progress: 0 });\n\n  useEffect(() => {\n    if (!storage) return;\n    const updateList = async () => {\n      const newDbIndex = await storage.list();\n      dispatch({ type: 'UPDATE_DB_INDEX', payload: { dbIndex: newDbIndex } });\n    };\n    updateList();\n  }, [dispatch, storage]);\n  \n  const handleProgressEvent = event => {\n    setDownloadInProgress(event.detail);\n  };\n  \n  useEffect(() => {\n    window.addEventListener('storage-progress', handleProgressEvent);\n    return () => { // clean up when unmounting\n      window.removeEventListener('storage-progress', handleProgressEvent);\n    };\n  }, []);\n\n  const removeMedia = async (offlineUri) => {\n    await storage.remove(offlineUri);\n    const newDbIndex = await storage.list();\n    dispatch({ type: 'UPDATE_DB_INDEX', payload: { dbIndex: newDbIndex } });\n  };\n  \n  const debounced = useRef(debounce(async () => {\n    // todo this can happen even if the component is not mounted\n    // this should reload the list of downloads after the progress updates have ceased\n    setDownloadInProgress({\n      content: null,\n      progress: 0,\n    });\n    const newDbIndex = await storage.list();\n    dispatch({ type: 'UPDATE_DB_INDEX', payload: { dbIndex: newDbIndex } });\n  }, 1000));\n\n  useEffect(() => {\n    content && debounced.current();\n  });\n\n  return (\n    <Fragment>\n      <ul className=\"list-group\">\n        {content &&\n          <DownloadInProgress title={content.appMetadata.title} progress={progress} dateStarted={content.appMetadata.downloaded} />}\n        {dbIndex.reverse().map(({ appMetadata, offlineUri }, index) => (\n          <DownloadItem\n            title={appMetadata.title}\n            key={`download_${index}_${appMetadata.title}`}\n            done\n            id={appMetadata.id}\n            removeMedia={() => removeMedia(offlineUri)}\n            downloadedOn={appMetadata.downloaded}\n          />\n        ))}\n      </ul>\n      <StorageInfo max={2000} current={500} />\n    </Fragment>\n  );\n};\n\nexport default DownloadManager;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"jumbotron\">\n    <h1>Hello, world!</h1>\n    <p className=\"lead\">This is an App that demonstates offline storage and playback of videos with the Shaka player.</p>\n    <hr />\n      <p>There are many bugs and few features.</p>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst MediaItem = ({\n  id,\n  onClickDownload,\n  poster,\n  tagline,\n  title,\n}) => (\n  <div className=\"col-md-6\" style={{ marginBottom: '1rem' }}>\n    <div className=\"card bg-dark text-white\" style={{ background: 'black' }}>\n      <img\n        className=\"card-img-top\"\n        src={poster}\n        alt={`image_${title}`}\n        style={{ minHeight: '10rem', opacity: '0.4', borderRadius: '.25rem' }}\n      />\n      <div className=\"card-img-overlay d-flex justify-content-between flex-column\">\n        <h5 className=\"card-title\">{title}</h5>\n        <p className=\"card-text\">{tagline}</p>\n        <div className=\"text-right\">\n          <div className=\"btn-group\" role=\"group\">\n            <button\n              className=\"btn btn-secondary\"\n              onClick={onClickDownload}\n              type=\"button\"\n            >\n              Download\n            </button>\n            <NavLink\n              className=\"btn btn-primary\"\n              exact\n              role=\"button\"\n              to={`/stream/${id}`}\n            >Watch now!</NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nMediaItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  tagline: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  onClickDownload: PropTypes.func.isRequired,\n};\n\nexport default MediaItem;\n","import React, { Fragment, useContext, useState } from 'react';\nimport { Store } from '../Store';\nimport MediaItem from '../components/MediaItem';\n\nconst MediaBrowser = ({ history }) => {\n  const {\n    state: {\n      dbIndex,\n      storage,\n      videos,\n    },\n   } = useContext(Store);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const downloadVideo = (videoId) => {\n    if (!storage.getStoreInProgress()) { // only one download at a time with shaka\n      if (dbIndex.find(v => v.appMetadata.id === videoId)) { // check if already in storage\n        if (!window.confirm('Are you sure you want download this again?')) {\n          return;\n        }\n      }\n      const video = videos.find(v => v.id === videoId);\n      storage.store(video.manifestUri, {\n        downloaded: Date(),\n        id: video.id,\n        title: video.title,\n      });\n      history.push('/downloads');\n    } else alert('Download already in Progress!');\n  };\n\n  return (\n    <Fragment>\n      <form className=\"input-group\" style={{ paddingBottom: '1rem' }}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={e => setSearchTerm(e.target.value)}\n          value={searchTerm}\n        />\n        {searchTerm && <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-outline-secondary\"\n            onClick={() => setSearchTerm('')}\n          >\n            Clear\n          </button>\n        </div>}\n      </form>\n      <div className=\"row\">\n        {videos.filter(video => video.title.includes(searchTerm)).map((video, index) => (\n          <MediaItem\n            {...video}\n            key={`media_${index}_${video.title}`}\n            onClickDownload={() => downloadVideo(video.id)}\n          />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MediaBrowser;\n","import React, { useEffect, useRef, useContext } from 'react';\nimport { Store } from '../Store';\n\nconst MediaPlayer = ({ match, history }) => {\n  const videoEl = useRef(null); // reference to the <video> element\n\n  const {\n    state: {\n      player,\n      storage,\n      videos,\n    },\n  } = useContext(Store);\n  const metadata = videos.find((video => video.id === match.params.id)); // get id from URL, metadata from datastore\n\n  useEffect(() => {\n    // make linter happy\n    const videoElement = videoEl.current;\n    // attach player to video tag\n    player.attach(videoElement);\n\n    if (match.params.mode === 'stream') {\n      player.load(metadata.manifestUri); // maybe I should catch errors here TODO\n    } else { // mode === 'offline'\n      // get offlineUri from storage\n      storage.list().then((list) => {\n        const offlineVideo = list.find(video => video.appMetadata.id === match.params.id);\n        player.load(offlineVideo.offlineUri);\n      });\n    }\n    return () => {\n      // detach player from element when component unmounts\n      player.detach(videoElement);\n    };\n  }, [match, metadata, player, storage]); // run this effect only when it is first mounted or these values change\n\n  return (\n    <div className=\"card bg-light\">\n      <div className=\"card-header\">\n        {metadata ? metadata.title : '404'}\n        <button\n          type=\"button\"\n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={history.goBack}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"card-body\">\n        {metadata ? (\n          <video\n            ref={videoEl}\n            style={{ width: '100%', maxHeight: '80vh' }}\n            poster={metadata.poster}\n            controls\n            autoPlay\n          />\n        ) : 'Video not found.'}\n      </div>\n    </div>\n  );\n};\n\nexport default MediaPlayer;\n","import React, { useContext } from 'react';\nimport { Store } from '../Store';\n\nconst languageOptions = [\n  {\n    label: 'English',\n    id: 'en-US',\n  },\n  {\n    label: 'Deutsch',\n    id: 'ger',\n  },\n  {\n    label: 'Français',\n    id: 'fra',\n  },\n];\nconst subtitleOptions = [\n  ...languageOptions,\n  {\n    label: 'None',\n    id: '',\n  },\n];\n\nconst Configuration = () => {\n  const { state, dispatch } = useContext(Store);\n  const { configuration } = state;\n\n  // const updateRadios = (update, value) => {\n  //   if (update === \"audio\") {\n  //     cookies.set('userPreferredAudioLanguage', value, { path: '/' });\n  //     setAudio(value);\n  //   } else if (update === \"subtitle\") {\n  //     cookies.set('userPreferredTextLanguage', value, { path: '/' });\n  //     setSubtitle(value);\n  //   }\n  // };\n\n  return (\n    <div className=\"form-check\">\n      <form>\n        <fieldset className=\"form-group\">\n          <div className=\"col\">\n            <div className=\"row\">\n              <legend className=\"col-form-label col-sm-2 pt-0\">Preferred Language</legend>\n              <div className=\"col\">\n                {languageOptions.map(({ label, id }) => (\n                  <div className=\"form-check\" key={`key_language_${id}`}>\n                    <input \n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"languageRadios\"\n                      id={`language_${id}`}\n                      value={id}\n                      checked={id === configuration.language}\n                      onChange={e => dispatch({\n                        type: 'SET_CONFIG_LANGUAGE',\n                        payload: e.target.value,\n                      })}\n                      />\n                    <label className=\"form-check-label\" htmlFor={`language_${id}`}>\n                      {label}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"row\">\n              <legend className=\"col-form-label col-sm-2 pt-0\">Preferred Subtitles</legend>\n              <div className=\"col\">\n                {subtitleOptions.map(({ label, id }) => (\n                  <div className=\"form-check\" key={`key_subtitles_${id}`}>\n                    <input \n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"subtitleRadios\"\n                      id={`subtitles_${id}`}\n                      value={id}\n                      checked={id === configuration.subtitles}\n                      onChange={e => dispatch({\n                        type: 'SET_CONFIG_SUBTITLES',\n                        payload: e.target.value,\n                      })}\n                      />\n                    <label className=\"form-check-label\" htmlFor={`subtitles_${id}`}>\n                      {label}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  );\n\n};\n\nexport default Configuration;\n","import React, { useEffect, useContext, Fragment } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Store } from './Store';\nimport LoadingScreen from './components/LoadingScreen';\nimport Nav from './components/Nav';\nimport DownloadManager from './routes/DownloadManager';\nimport Home from './routes/Home';\nimport MediaBrowser from './routes/MediaBrowser';\nimport MediaPlayer from './routes/MediaPlayer';\nimport Configuration from './routes/Configuration';\n\nconst routes = [\n  {\n    exact: true,\n    key: 'media',\n    label: 'Media',\n    path: '/media',\n  },\n  {\n    exact: true,\n    key: 'downloads',\n    label: 'Downloads',\n    path: '/downloads',\n  },\n  {\n    exact: true,\n    key: 'configuration',\n    label: 'Configuration',\n    path: '/configuration',\n  },\n];\n\nconst App = () => { \n  const { state: { isInit, isSupported }, dispatch } = useContext(Store);\n\n  useEffect(() => {\n    !isInit && dispatch({ type: 'INIT', dispatch });\n  });\n\n  if (!isInit) return <LoadingScreen />;\n\n  return (\n    <Router onUpdate={() => window.scrollTo(0, 0)}>\n      <div className=\"App\">\n        <Nav routes={routes} />\n        <main className=\"container\" style={{ paddingTop: '4.5rem' }}>\n          {!isSupported ? (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              <h4 className=\"alert-heading\">Browser not supported!</h4>\n              <hr />\n              Unfortunately your browser does not support all required technologies.\n            </div>\n          ) : (\n            <Fragment>\n              <Route\n                component={Home}\n                exact\n                path=\"/\"\n              />\n              <Route\n                component={MediaBrowser}\n                exact\n                path=\"/media\"\n              />\n              <Route\n                component={DownloadManager}\n                exact\n                path=\"/downloads\"\n              />\n              <Route\n                component={MediaPlayer}\n                exact\n                path=\"/:mode(stream|offline)/:id\"\n              />\n              <Route\n                component={Configuration}\n                exact\n                path=\"/configuration\"\n              />\n            </Fragment>\n          )}\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './Store';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}