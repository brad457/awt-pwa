{"version":3,"sources":["Store.js","components/Nav.js","components/StorageInfo.js","components/DownloadItem.js","components/DownloadInProgress.js","routes/DownloadManager.js","routes/Home.js","components/MediaItem.js","routes/MediaBrowser.js","routes/MediaPlayer.js","App.js","serviceWorker.js","index.js"],"names":["Store","React","createContext","initialState","isInit","isSupported","videos","downloadInProgress","content","progress","dbIndex","isOnline","window","navigator","onLine","reducer","state","action","type","Object","objectSpread","Nav","_ref","routes","_useState","useState","_useState2","slicedToArray","isOpen","setIsOpen","useContext","react_default","a","createElement","className","react_router_dom","exact","to","aria-expanded","aria-label","onClick","concat","map","_ref2","key","label","path","activeClassName","disabled","getStorageEstimate","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","storage","estimate","then","quota","usage","Math","round","stop","apply","this","arguments","StorageInfo","storageInfo","setStorageInfo","useEffect","storageEstimateInterval","setInterval","clearInterval","style","marginTop","height","role","width","aria-valuenow","aria-valuemin","aria-valuemax","DownloadItem","id","removeMedia","title","downloadedOn","href","DownloadInProgress","react","appMetadata","marginBottom","DownloadManager","_useContext","dispatch","updateList","newDbIndex","list","sent","_callee2","offlineUri","_context2","remove","_x","inProgress","getStoreInProgress","debounced","useRef","debounce","current","components_DownloadInProgress","_ref3","index","components_DownloadItem","done","downloaded","components_StorageInfo","max","Home","MediaItem","tagline","poster","onClickDownload","allowDownload","background","src","alt","minHeight","opacity","borderRadius","MediaBrowser","history","video","components_MediaItem","assign","videoId","alert","find","v","confirm","store","manifestUri","Date","push","downloadVideo","MediaPlayer","match","videoEl","metadata","params","player","shaka","Player","onError","error","console","code","addEventListener","detail","mode","load","catch","offlineVideo","destroy","goBack","aria-hidden","ref","maxHeight","controls","autoPlay","App","init","data","dataJSON","progressCallback","setOnlineStatus","fetch","json","polyfill","installAll","offline","Storage","configure","isBrowserSupported","support","onUpdate","scrollTo","components_Nav","react_router","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onSuccess","ReactDOM","render","children","_useReducer","useReducer","_useReducer2","value","Provider","src_App_0","document","getElementById","URL","process","origin","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6745b86e.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\n\nexport const Store = React.createContext();\n\nconst initialProgress = {\n  content: null,\n  progress: 0,\n};\n\nconst initialState = {\n  isInit: false,\n  isSupported: true,\n  videos: [],\n  downloadInProgress: initialProgress,\n  dbIndex: [],\n  isOnline: window.navigator.onLine,\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'INIT_DONE':\n      return {\n        ...state,\n        isInit: action.isInit,\n        isSupported: action.isSupported,\n        videos: action.videos,\n      };\n    case 'DOWNLOAD_PROGRESS':\n      const { content, progress } = action;\n      return { ...state, downloadInProgress: { content, progress } };\n    case 'UPDATE_DB_INDEX':\n      return { ...state, dbIndex: action.dbIndex };\n    case 'SET_IS_ONLINE':\n      return { ...state, isOnline: action.isOnline }\n    default:\n      return state;\n  }\n}\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <Store.Provider value={value}>\n      {children}\n    </Store.Provider>\n  );\n};\n\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Store } from '../Store';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = ({ routes }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const { state } = useContext(Store);\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\">\n      <NavLink\n        className=\"navbar-brand\"\n        exact\n        to=\"/\"\n      >\n        Shaka-O-Matik\n      </NavLink>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        aria-expanded={isOpen}\n        aria-label=\"Toggle navigation\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className={`collapse navbar-collapse ${isOpen ? 'show': ''}`}>\n        <div className=\"navbar-nav\">\n          {routes.map(({\n            exact,\n            key,\n            label,\n            path,\n          }) => (\n            <NavLink\n              activeClassName=\"active\"\n              className=\"nav-item nav-link\"\n              exact={exact}\n              key={key}\n              onClick={() => setIsOpen(false)}\n              to={path}\n            >\n              {label}<span className=\"sr-only\">(current)</span>\n            </NavLink>\n          ))}\n        </div>\n      </div>\n      {state.isOnline\n        ? <button type=\"button\" className=\"btn btn-success\" disabled>Online</button>\n        : <button type=\"button\" className=\"btn btn-danger\" disabled>Offline</button>\n      }\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    exact: PropTypes.bool,\n  })).isRequired,\n}\n\nexport default Nav;\n","import React, { useEffect, useState } from 'react';\n\nconst getStorageEstimate = async () => {\n  return navigator.storage.estimate().then(({ quota, usage }) => ({ quota: Math.round(quota/1000000), usage: Math.round(usage/1000000) }));\n}\n\nconst StorageInfo = () => {\n  const [storageInfo, setStorageInfo] = useState({ usage: 0, quota: 100 })\n\n  useEffect(() => {\n    // AFAIK it's impossible to listen to 'storage' events on the same page.\n    // These events are only fire if changes are made to indexedDB in another tab,\n    // so I just added an interval to check the storage estimate every x seconds.\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      const storageEstimateInterval = setInterval(() => {\n        getStorageEstimate().then(setStorageInfo);\n      }, 5000);\n      getStorageEstimate().then(setStorageInfo);\n      return () => clearInterval(storageEstimateInterval);\n    }\n  }, []);\n\n  return (\n    <div className=\"card\" style={{ marginTop: '1rem' }}>\n      <div className=\"card-body\">\n        You have {storageInfo.quota}MB of accessible storage and currently use {storageInfo.usage}MB.\n        <div className=\"progress\" style={{ height: '2rem' }}>\n          <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ width: `${storageInfo.usage/storageInfo.quota*100}%` }} aria-valuenow={storageInfo.usage} aria-valuemin=\"0\" aria-valuemax={storageInfo.quota}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StorageInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DownloadItem = ({\n  id,\n  removeMedia,\n  title,\n  downloadedOn\n}) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>{downloadedOn}</small>\n    <hr />\n    <div className=\"d-flex justify-content-between\">\n      <a\n        className=\"btn btn-primary\"\n        href={`/#/offline/${id}`}\n        role=\"button\"\n      >Watch</a>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={removeMedia}\n      >Remove</button>\n    </div>\n  </li>\n);\n\nDownloadItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  removeMedia: PropTypes.func.isRequired,\n};\n\nexport default DownloadItem;\n","import React, { Fragment, useContext } from 'react';\nimport { Store } from '../Store';\n\nconst DownloadInProgress = () => {\n  const { state } = useContext(Store);\n  const { downloadInProgress } = state;\n\n  return (\n    <Fragment>\n      {downloadInProgress.content && (\n        <li className=\"list-group-item\">\n          {downloadInProgress.content.appMetadata.title}\n          <br />\n          <small>{downloadInProgress.content.appMetadata.downloadedOn}</small>\n          <hr />\n          <div className=\"progress\" style={{ marginBottom: '0.5rem' }}>\n            <div\n              className=\"progress-bar progress-bar-striped progress-bar-animated\"\n              role=\"progressbar\"\n              aria-valuenow={downloadInProgress.progress * 100}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: `${downloadInProgress.progress * 100}%` }}\n            />\n          </div>\n        </li>\n      )}\n    </Fragment>\n  );\n};\n\nexport default DownloadInProgress;\n","import React, { Fragment, useEffect, useContext, useRef } from 'react';\nimport debounce from 'lodash/debounce';\nimport { Store } from '../Store';\nimport StorageInfo from '../components/StorageInfo';\nimport DownloadItem from '../components/DownloadItem';\nimport DownloadInProgress from '../components/DownloadInProgress';\n\nconst DownloadManager = () => {\n  const { state, dispatch } = useContext(Store);\n  const { dbIndex } = state;\n\n  const updateList = async () => {\n    const newDbIndex = await window.storage.list();\n    dispatch({ type: 'UPDATE_DB_INDEX', dbIndex: newDbIndex });\n  };\n\n  useEffect(() => {\n    updateList();\n  }, []);\n\n  const removeMedia = async (offlineUri) => {\n    await window.storage.remove(offlineUri);\n    await updateList();\n  };\n\n  const inProgress = window.storage.getStoreInProgress();\n\n  const debounced = useRef(debounce(updateList, 1000));\n  useEffect(() => { \n    inProgress && debounced.current();\n  });\n    \n  return (\n    <Fragment>\n      <ul className=\"list-group\">\n        {inProgress && <DownloadInProgress />}\n        {dbIndex.map(({ appMetadata, offlineUri }, index) => ( // todo reorder with css\n          <DownloadItem\n            title={appMetadata.title}\n            key={`download_${index}_${appMetadata.title}`}\n            done\n            id={appMetadata.id}\n            removeMedia={() => removeMedia(offlineUri)}\n            downloadedOn={appMetadata.downloaded}\n          />\n        ))}\n      </ul>\n      <StorageInfo max={2000} current={500} />\n    </Fragment>\n  );\n};\n\nexport default DownloadManager;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"jumbotron\">\n    <h1>Hello, world!</h1>\n    <p className=\"lead\">This is an App that demonstates offline storage and playback of videos with the Shaka player.</p>\n    <hr />\n      <p>There are many bugs and few features.</p>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst MediaItem = ({\n  title,\n  tagline,\n  id,\n  poster,\n  onClickDownload,\n  allowDownload,\n}) => (\n  <div className=\"col-md-6\" style={{ marginBottom: '1rem' }}>\n    <div className=\"card bg-dark text-white\" style={{ background: 'black' }}>\n      <img\n        className=\"card-img-top\"\n        src={poster}\n        alt={`image_${title}`}\n        style={{ minHeight: '10rem', opacity: '0.4', borderRadius: '.25rem' }}\n      />\n      <div className=\"card-img-overlay d-flex justify-content-between flex-column\">\n        <h5 className=\"card-title\">{title}</h5>\n        <p className=\"card-text\">{tagline}</p>\n        <div className=\"text-right\">\n            {allowDownload && (\n              <div className=\"btn-group\" role=\"group\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={onClickDownload}\n                >\n                  Download\n                </button>\n                <NavLink\n                  className=\"btn btn-primary\"\n                  exact\n                  to={`/stream/${id}`}\n                  role=\"button\"\n                >Watch now!</NavLink>\n            </div>\n            )}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nMediaItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  tagline: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  onClickDownload: PropTypes.func.isRequired,\n  allowDownload: PropTypes.bool.isRequired,\n};\n\nexport default MediaItem;\n","import React, { Fragment, useContext } from 'react';\nimport { Store } from '../Store';\nimport MediaItem from '../components/MediaItem';\n\nconst MediaBrowser = ({ history }) => {\n  const { state } = useContext(Store);\n\n  const { videos, dbIndex } = state;\n\n  const downloadVideo = (videoId) => {\n    if (!window.storage.getStoreInProgress()) { // only one download at a time with shaka\n      if (dbIndex.find(v => v.appMetadata.id === videoId)) { // check if already in storage\n        if (!window.confirm('Are you sure you want download this again?')) {\n          return;\n        }\n      }\n      const video = videos.find(v => v.id === videoId);\n      window.storage.store(video.manifestUri, {\n        downloaded: Date(),\n        id: video.id,\n        title: video.title,\n      });\n      history.push('/downloads');\n    } else alert('Download already in Progress!');\n  };\n\n  return (\n    <Fragment>\n      {/* <form className=\"form-inline\" style={{ paddingBottom: '1rem' }}>\n        <input className=\"form-control\" type=\"text\" placeholder=\"Search\" />\n        <div className=\"form-check form-check-inline\">\n          <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n          <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n            Show downloaded only\n          </label>\n        </div>\n      </form> */}\n      <div className=\"row\">\n        {videos.map((video, index) => (\n          <MediaItem\n            {...video}\n            key={`media_${index}_${video.title}`}\n            onClickDownload={() => downloadVideo(video.id)}\n            allowDownload={state.isOnline}\n          />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MediaBrowser;\n","import React, { useEffect, useRef, useContext } from 'react';\nimport { Store } from '../Store';\n\nconst MediaPlayer = ({ match, history }) => {\n  const videoEl = useRef(null); // reference to the <video> element\n\n  const { state } = useContext(Store);\n  const { videos } = state;\n  const metadata = videos.find((video => video.id === match.params.id)); // get id from URL, metadata from datastore\n\n  useEffect(() => {\n    const player = new window.shaka.Player(videoEl.current); // initialize player on component mount\n\n    const onError = (error) => { // log errors\n      console.error('Error code', error.code, 'object', error);\n    }\n\n    player.addEventListener('error', ({ detail }) => onError(detail));\n    if (match.params.mode === 'stream') {\n      player.load(metadata.manifestUri).catch(onError);\n    } else { // mode === 'offline'\n      // get offlineUri from storage\n      window.storage.list().then((list) => {\n        const offlineVideo = list.find(video => video.appMetadata.id === match.params.id);\n        player.load(offlineVideo.offlineUri); // start playing from storage\n      });\n    }\n    return () => player.destroy(); // clean up when the component is unmounted.\n  }, [match,metadata]); // run this effect only when it is first mounted or these values change\n\n  return (\n    <div className=\"card bg-light\">\n      <div className=\"card-header\">\n        {metadata ? metadata.title : '404'}\n        <button\n          type=\"button\"\n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={history.goBack}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"card-body\">\n        {metadata ? (\n          <video\n            ref={videoEl}\n            style={{ width: '100%', maxHeight: '80vh' }}\n            poster={metadata.poster}\n            controls\n            autoPlay\n          />\n        ) : 'Video not found.'}\n      </div>\n    </div>\n  );\n};\n\nexport default MediaPlayer;\n","import React, { useEffect, useContext, Fragment } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { Store } from './Store';\nimport './App.css';\nimport Nav from './components/Nav';\nimport DownloadManager from './routes/DownloadManager';\nimport Home from './routes/Home';\nimport MediaBrowser from './routes/MediaBrowser';\nimport MediaPlayer from './routes/MediaPlayer';\n\nconst routes = [\n  {\n    exact: true,\n    key: 'media',\n    label: 'Media',\n    path: '/media',\n  },\n  {\n    exact: true,\n    key: 'downloads',\n    label: 'Downloads',\n    path: '/downloads',\n  },\n];\n\nconst App = () => { \n  const { state, dispatch } = useContext(Store);\n\n  const init = async () => {\n    // fetch video data\n    const data = await fetch('data/videos.json');\n    const dataJSON = await data.json();\n\n    // init shaka\n    const shaka = window.shaka;\n    shaka.polyfill.installAll();\n\n    // initialize shaka storage\n    window.storage = new shaka.offline.Storage();\n    // make shaka dispatch progress events so that we can have a progress bar when downloading\n    // this will probably no longer be necessary in the next version of shaka\n    const progressCallback = (content, progress) => {\n      dispatch({\n        type: 'DOWNLOAD_PROGRESS',\n        content,\n        progress, \n      });\n    };\n    window.storage.configure({ progressCallback });\n\n    // add event listeners for online status\n    const setOnlineStatus = (isOnline) => dispatch({ type: 'SET_IS_ONLINE', isOnline });\n    window.addEventListener('online', () => setOnlineStatus(true));\n    window.addEventListener('offline', () => setOnlineStatus(false));\n\n    // store indexedDB index in store\n    const dbIndex = await window.storage.list();\n    dispatch({\n      type: 'UPDATE_DB_INDEX',\n      dbIndex,\n    });\n\n    // start app\n    return dispatch({\n      type: 'INIT_DONE',\n      videos: dataJSON,\n      isInit: true,\n      isSupported: shaka.Player.isBrowserSupported() && shaka.offline.Storage.support(),\n    });\n  };\n\n  useEffect(() => {\n    !state.isInit && init();\n  });\n\n  const { isInit, isSupported } = state;\n\n  if (!isInit) return <p>loading...</p>;\n\n  return (\n    <Router onUpdate={() => window.scrollTo(0, 0)}>\n      <div className=\"App\">\n        <Nav routes={routes} />\n        <main className=\"container\">\n          {!isSupported ? (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              <h4 className=\"alert-heading\">Browser not supported!</h4>\n              <hr />\n              Unfortunately your browser does not support all required technologies.\n            </div>\n          ) : (\n            <Fragment>\n              <Route\n                component={Home}\n                exact\n                path=\"/\"\n              />\n              <Route\n                component={MediaBrowser}\n                exact\n                path=\"/media\"\n              />\n              <Route\n                component={DownloadManager}\n                exact\n                path=\"/downloads\"\n              />\n              <Route\n                component={MediaPlayer}\n                exact\n                path=\"/:mode(stream|offline)/:id\"\n              />\n            </Fragment>\n          )}\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './Store';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}