{"version":3,"sources":["components/Nav.js","components/MediaItem.js","data/videos.js","routes/MediaBrowser.js","components/StorageInfo.js","components/DownloadItem.js","components/DownloadInProgress.js","routes/DownloadManager.js","routes/MediaPlayer.js","App.js","serviceWorker.js","index.js"],"names":["Nav","_ref","routes","_useState","useState","_useState2","Object","slicedToArray","isOpen","setIsOpen","_useState3","window","navigator","onLine","_useState4","isOnline","setIsOnline","setIsOnlineTrue","setIsOnlineFalse","useEffect","addEventListener","removeEventListener","react_default","a","createElement","className","href","type","aria-expanded","aria-label","onClick","concat","map","_ref2","exact","key","label","path","react_router_dom","to","activeClassName","disabled","MediaItem","title","tagline","id","poster","onClickDownload","allowDownload","style","marginBottom","background","src","alt","minHeight","opacity","borderRadius","role","videos","manifestUri","MediaBrowser","history","video","storage","getStoreInProgress","alert","store","downloaded","Date","downloadMedia","push","react","paddingBottom","placeholder","value","htmlFor","index","components_MediaItem","assign","getStorageEstimate","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","estimate","then","quota","usage","Math","round","stop","apply","this","arguments","StorageInfo","storageInfo","setStorageInfo","storageEstimateInterval","setInterval","clearInterval","marginTop","height","width","aria-valuenow","aria-valuemin","aria-valuemax","DownloadItem","removeMedia","downloadedOn","DownloadInProgress","downloadInProgress","setDownloadInProgress","detail","content","appMetadata","progress","DownloadManager","downloadList","setDownloadList","shouldRenderProgress","setShouldRenderProgress","list","updateInterval","isDownloadInProgress","offlineUri","remove","_x","components_DownloadInProgress","reverse","components_DownloadItem","done","components_StorageInfo","max","current","MediaPlayer","match","videoEl","useRef","metadata","find","params","player","shaka","Player","onError","error","console","code","mode","load","catch","offlineVideo","destroy","goBack","aria-hidden","ref","maxHeight","controls","autoPlay","component","App","isInit","setIsInit","isShakaSupported","setIsShakaSupported","_useState5","_useState6","isIndexedDbSupported","setIsIndexedDbSupported","polyfill","installAll","isBrowserSupported","offline","Storage","support","configure","progressCallback","progressEvent","CustomEvent","dispatchEvent","onUpdate","scrollTo","components_Nav","react_router","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onSuccess","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d48db164.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = ({ routes }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOnline, setIsOnline] = useState(window.navigator.onLine);\n\n  const setIsOnlineTrue = () => setIsOnline(true);\n  const setIsOnlineFalse = () => setIsOnline(false);\n\n  useEffect(() => { // listen to online status\n    window.addEventListener('online', setIsOnlineTrue);\n    window.addEventListener('offline', setIsOnlineFalse);\n    return () => { // clean up on component unmount\n      window.removeEventListener(\"online\", setIsOnlineTrue);\n      window.removeEventListener('offline', setIsOnlineFalse);\n    };\n  },[]);\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\">\n      <a className=\"navbar-brand\" href=\"/#/\">AWT-PWA</a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        aria-expanded={isOpen}\n        aria-label=\"Toggle navigation\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className={`collapse navbar-collapse ${isOpen ? 'show': ''}`}>\n        <div className=\"navbar-nav\">\n          {routes.map(({\n            exact,\n            key,\n            label,\n            path,\n          }) => (\n            <NavLink\n              key={key}\n              exact={exact}\n              to={path}\n              onClick={() => setIsOpen(false)}\n              className=\"nav-item nav-link\"\n              activeClassName=\"active\"\n            >\n              {label}<span className=\"sr-only\">(current)</span>\n            </NavLink>\n          ))}\n        </div>\n      </div>\n      {isOnline\n        ? <button type=\"button\" className=\"btn btn-success\" disabled>Online</button>\n        : <button type=\"button\" className=\"btn btn-danger\" disabled>Offline</button>\n      }\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    exact: PropTypes.bool,\n  })).isRequired,\n}\n\nexport default Nav;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MediaItem = ({\n  title,\n  tagline,\n  id,\n  poster,\n  onClickDownload,\n  allowDownload,\n}) => (\n  <div className=\"col-md-6\" style={{ marginBottom: '1rem' }}>\n    <div className=\"card bg-dark text-white\" style={{ background: 'black' }}>\n      <img\n        className=\"card-img-top\"\n        src={poster}\n        alt={`image_${title}`}\n        style={{ minHeight: '10rem', opacity: '0.4', borderRadius: '.25rem' }}\n      />\n      <div className=\"card-img-overlay d-flex justify-content-between flex-column\">\n        <h5 className=\"card-title\">{title}</h5>\n        <p className=\"card-text\">{tagline}</p>\n        <div className=\"text-right\">\n            {allowDownload && (\n              <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={onClickDownload}\n                >\n                  Download\n                </button>\n                <a className=\"btn btn-primary\" href={`/#/stream/${id}`} role=\"button\">Watch now!</a>\n            </div>\n            )}\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nMediaItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  tagline: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  onClickDownload: PropTypes.func.isRequired,\n  allowDownload: PropTypes.bool.isRequired,\n};\n\nexport default MediaItem;\n","const videos = [\n  {\n    manifestUri: '//storage.googleapis.com/shaka-demo-assets/angel-one/dash.mpd',\n    title: 'Star Trek: Angel One',\n    id: 'ewion',\n    tagline: 'Enjoy some classic Star Trek!!!1',\n    poster: '//shaka-player-demo.appspot.com/assets/poster.jpg',\n  },\n];\n\nexport default videos;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport MediaItem from '../components/MediaItem';\nimport videos from '../data/videos';\n\nconst downloadMedia = (video) => { // function is called when download is clicked\n  if (!window.storage.getStoreInProgress()) {\n    window.storage.store(video.manifestUri, {\n      title: video.title,\n      downloaded: Date(),\n      id: video.id,\n    }); // start downloading\n  } else { alert('Download already in Progress!'); }\n} \n\nconst MediaBrowser = ({ history }) => {\n  const onClickDownload = (video) => {\n    downloadMedia(video);\n    history.push('/downloads');\n  };\n\n  const [isOnline, setIsOnline] = useState(window.navigator.onLine);\n\n  const setIsOnlineTrue = () => setIsOnline(true);\n  const setIsOnlineFalse = () => setIsOnline(false);\n\n  useEffect(() => { // listen to online status\n    window.addEventListener('online', setIsOnlineTrue);\n    window.addEventListener('offline', setIsOnlineFalse);\n    return () => { // clean up on component unmount\n      window.removeEventListener(\"online\", setIsOnlineTrue);\n      window.removeEventListener('offline', setIsOnlineFalse);\n    };\n  },[]);\n\n  return (\n    <Fragment>\n      <form className=\"form-inline\" style={{ paddingBottom: '1rem' }}>\n        <input className=\"form-control\" type=\"text\" placeholder=\"Search\" />\n        <div className=\"form-check form-check-inline\">\n          <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" />\n          <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n            Show downloaded only\n          </label>\n        </div>\n      </form>\n      <div className=\"row\">\n        {videos.map((video, index) => (\n          <MediaItem\n            {...video}\n            key={`media_${index}_${video.title}`}\n            onClickDownload={() => onClickDownload(video)}\n            allowDownload={!!isOnline}\n          />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MediaBrowser;\n","import React, { useEffect, useState } from 'react';\n\nconst getStorageEstimate = async () => {\n  return navigator.storage.estimate().then(({ quota, usage }) => ({ quota: Math.round(quota/1000000), usage: Math.round(usage/1000000) }));\n}\n\nconst StorageInfo = () => {\n  const [storageInfo, setStorageInfo] = useState({ usage: 0, quota: 100 })\n\n  useEffect(() => {\n    // AFAIK it's impossible to listen to 'storage' events on the same page.\n    // These events are only fire if changes are made to indexedDB in another tab,\n    // so I just added an interval to check the storage estimate every x seconds.\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      const storageEstimateInterval = setInterval(() => {\n        getStorageEstimate().then(setStorageInfo);\n      }, 5000);\n      getStorageEstimate().then(setStorageInfo);\n      return () => clearInterval(storageEstimateInterval);\n    }\n  }, []);\n\n  return (\n    <div className=\"card\" style={{ marginTop: '1rem' }}>\n      <div className=\"card-body\">\n        You have {storageInfo.quota}MB of accessible storage and currently use {storageInfo.usage}MB.\n        <div className=\"progress\" style={{ height: '2rem' }}>\n          <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ width: `${storageInfo.usage/storageInfo.quota*100}%` }} aria-valuenow={storageInfo.usage} aria-valuemin=\"0\" aria-valuemax={storageInfo.quota}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StorageInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DownloadItem = ({\n  id,\n  removeMedia,\n  title,\n  downloadedOn\n}) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>{downloadedOn}</small>\n    <hr />\n    <div className=\"d-flex justify-content-between\">\n      <a\n        className=\"btn btn-primary\"\n        href={`/#/offline/${id}`}\n        role=\"button\"\n      >Watch</a>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={removeMedia}\n      >Remove</button>\n    </div>\n  </li>\n);\n\nDownloadItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  removeMedia: PropTypes.func.isRequired,\n};\n\nexport default DownloadItem;\n","import React, { Fragment, useEffect, useState } from 'react';\n\nconst DownloadInProgress = () => {\n  const [downloadInProgress, setDownloadInProgress] = useState(null);\n\n  useEffect(() => {\n    window.addEventListener('custom-progress', setDownloadInProgress); // subscribe to progress events\n    return () => { // clean up after yourself\n      window.removeEventListener('custom-progress', setDownloadInProgress);\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      {downloadInProgress && (\n        <li className=\"list-group-item\">\n          {downloadInProgress.detail.content.appMetadata.title}\n          <br />\n          <small>{downloadInProgress.detail.content.appMetadata.downloadedOn}</small>\n          <hr />\n          <div className=\"progress\" style={{ marginBottom: '0.5rem' }}>\n            <div\n              className=\"progress-bar progress-bar-striped progress-bar-animated\"\n              role=\"progressbar\"\n              aria-valuenow={downloadInProgress.detail.progress * 100}\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n              style={{ width: `${downloadInProgress.detail.progress * 100}%` }}\n            />\n          </div>\n        </li>\n      )}\n    </Fragment>\n  );\n};\n\nexport default DownloadInProgress;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport StorageInfo from '../components/StorageInfo';\nimport DownloadItem from '../components/DownloadItem';\nimport DownloadInProgress from '../components/DownloadInProgress';\n\nconst DownloadManager = () => {\n  const [downloadList, setDownloadList] = useState([]);\n  const [shouldRenderProgress, setShouldRenderProgress] = useState(false);\n\n  useEffect(() => {\n    window.storage.list().then(setDownloadList); // get finished downloads\n    const updateInterval = setInterval(() => { // check for ongoing downloads every second because shaka is missing lots of functionality\n      const isDownloadInProgress = window.storage.getStoreInProgress();\n      if (shouldRenderProgress !== isDownloadInProgress) {\n        window.storage.list().then(setDownloadList); // update downloads\n        setShouldRenderProgress(isDownloadInProgress);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(updateInterval);\n    };\n  }, [shouldRenderProgress]);\n\n  const removeMedia = async (offlineUri) => {\n    await window.storage.remove(offlineUri);\n    window.storage.list().then(setDownloadList);\n  } \n\n  return (\n    <Fragment>\n      <ul className=\"list-group\">\n        {shouldRenderProgress && <DownloadInProgress />}\n        {downloadList.reverse().map(({ appMetadata, offlineUri }, index) => ( // last one first\n          <DownloadItem\n            title={appMetadata.title}\n            key={`download_${index}_${appMetadata.title}`}\n            done\n            id={appMetadata.id}\n            removeMedia={() => removeMedia(offlineUri)}\n            downloadedOn={appMetadata.downloaded}\n          />\n        ))}\n      </ul>\n      <StorageInfo max={2000} current={500} />\n    </Fragment>\n  );\n};\n\nexport default DownloadManager;\n","import React, { useEffect, useRef } from 'react';\nimport videos from '../data/videos';\n\nconst MediaPlayer = ({ match, history }) => {\n  const videoEl = useRef(null); // reference to the <video> element\n  const metadata = videos.find((video => video.id === match.params.id)); // get id from URL, metadata from datastore\n\n  useEffect(() => {\n    const player = new window.shaka.Player(videoEl.current); // initialize player on component mount\n\n    const onError = (error) => { // log errors\n      console.error('Error code', error.code, 'object', error);\n    }\n\n    player.addEventListener('error', ({ detail }) => onError(detail));\n    if (match.params.mode === 'stream') {\n      player.load(metadata.manifestUri).catch(onError);\n    } else { // mode === 'offline'\n      // get offlineUri from storage\n      window.storage.list().then((list) => {\n        const offlineVideo = list.find(video => video.appMetadata.id === match.params.id);\n        player.load(offlineVideo.offlineUri); // start playing from storage\n      });\n    }\n    return () => player.destroy(); // clean up when the component is unmounted.\n  }, [match,metadata]); // run this effect only when it is first mounted or these values change\n\n  return (\n    <div className=\"card bg-light\">\n      <div className=\"card-header\">\n        {metadata ? metadata.title : '404'}\n        <button\n          type=\"button\"\n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={history.goBack}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"card-body\">\n        {metadata ? (\n          <video\n            ref={videoEl}\n            style={{ width: '100%', maxHeight: '80vh' }}\n            poster={metadata.poster}\n            controls\n            autoPlay\n          />\n        ) : 'Video not found.'}\n      </div>\n    </div>\n  );\n};\n\nexport default MediaPlayer;\n","import React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Nav from './components/Nav';\nimport MediaBrowser from './routes/MediaBrowser';\nimport DownloadManager from './routes/DownloadManager';\nimport MediaPlayer from './routes/MediaPlayer';\n\nconst routes = [\n  {\n    label: 'Media',\n    key: 'media',\n    path: '/media',\n    exact: true,\n    component: MediaBrowser,\n  },\n  {\n    label: 'Downloads',\n    key: 'downloads',\n    path: '/downloads',\n    exact: true,\n    component: DownloadManager,\n  },\n];\n\nconst App = () => {\n  const [isInit, setIsInit] = useState(false);\n  const [isShakaSupported, setIsShakaSupported] = useState(true);\n  const [isIndexedDbSupported, setIsIndexedDbSupported] = useState(true);\n\n  useEffect(() => { // on app mount\n    const shaka = window.shaka;\n    shaka.polyfill.installAll(); // install shaka polyfills\n    setIsShakaSupported(shaka.Player.isBrowserSupported()); // display warning if shaka not supported \n    setIsIndexedDbSupported(shaka.offline.Storage.support()); // display warning if indexedDB not supported\n\n    window.storage = new shaka.offline.Storage(); // initialize shaka storage\n    const dispatchProgressEvent = (content, progress) => {\n      // create custom event to track download progress\n      // this will probably no longer be necessary in the next version of shaka\n      const progressEvent = new CustomEvent('custom-progress', { detail: { progress, content } });\n      window.dispatchEvent(progressEvent);\n    }\n    window.storage.configure({ // configure storage to emit progress events that we can subscribe to elsewhere\n      progressCallback: dispatchProgressEvent,\n    });\n\n    setIsInit(true);\n  }, []);\n\n  if (!isInit) return <p>loading...</p>;\n\n  return (\n    <Router onUpdate={() => window.scrollTo(0, 0)}>\n      <div className=\"App\">\n        <Nav routes={routes} />\n        <main className=\"container\">\n          {!(isShakaSupported && isIndexedDbSupported) && (\n            <div className={`alert ${!isIndexedDbSupported ? 'alert-danger' : 'alert-warning'}`} role=\"alert\">\n              <h4 className=\"alert-heading\">Browser not supported!</h4>\n              <hr />\n              {!isShakaSupported && <p className=\"mb-0\">Your Browser is not supported as it does not support the Shaka Player</p>}\n              {!isIndexedDbSupported && <p className=\"mb-0\">IndexedDB not supported! Offline viewing is disabled.</p>}\n            </div>\n          )}\n          <Route\n            component={() => <p>todo welcome</p>}\n            exact\n            path=\"/\"\n          />\n          <Route\n            component={MediaBrowser}\n            exact\n            path=\"/media\"\n          />\n          <Route\n            component={DownloadManager}\n            exact\n            path=\"/downloads\"\n          />\n          <Route\n            component={MediaPlayer}\n            exact\n            path=\"/:mode(stream|offline)/:id\"\n          />\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}