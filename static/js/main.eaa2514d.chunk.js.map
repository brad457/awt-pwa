{"version":3,"sources":["Store.js","components/LoadingScreen.js","components/Nav.js","components/StorageInfo.js","components/DownloadItem.js","components/DownloadInProgress.js","routes/DownloadManager.js","routes/Home.js","components/MediaItem.js","routes/MediaBrowser.js","routes/MediaPlayer.js","routes/Configuration.js","App.js","serviceWorker.js","index.js"],"names":["Store","React","createContext","cookies","Cookies","initialConfiguration","language","subtitles","quality","initialState","configuration","dbIndex","isInit","isSupported","videos","player","storage","init","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","videosJsonPromise","isShakaPlayerSupported","isShakaStorageSupported","storageListPromise","onError","qualityValue","trackSelectionCallback","progressCallback","_ref3","_ref4","wrap","_context","prev","next","fetch","then","response","json","shaka","polyfill","installAll","Player","isBrowserSupported","offline","Storage","support","list","error","console","code","addEventListener","_ref2","detail","get","parseInt","tracks","window","customConfig","configure","preferredAudioLanguage","preferredTextLanguage","videoWithAudio","sort","b","height","filter","track","type","videoWithCorrectLanguage","subtitlesTracks","log","concat","toConsumableArray","length","pop","content","progress","dispatchEvent","CustomEvent","Promise","all","sent","slicedToArray","abrupt","payload","objectSpread","stop","_x","apply","this","arguments","reducer","state","_ref5","set","path","LoadingScreen","react_default","createElement","className","style","role","Nav","routes","_useState","useState","_useState2","isOpen","setIsOpen","_useState3","_useState4","isOnline","setIsOnline","node","useRef","setIsOnlineTrue","setIsOnlineFalse","useEffect","navigator","onLine","removeEventListener","handleClickOutside","e","current","contains","target","document","react_router_dom","exact","to","aria-expanded","aria-label","onClick","ref","map","key","label","activeClassName","disabled","getStorageEstimate","estimate","quota","usage","Math","round","StorageInfo","storageInfo","setStorageInfo","storageEstimateInterval","setInterval","clearInterval","marginTop","width","aria-valuenow","aria-valuemin","aria-valuemax","DownloadItem","id","removeMedia","title","downloadedOn","DownloadInProgress","dateStarted","marginBottom","DownloadManager","_useContext","useContext","_useContext$state","_useState2$","setDownloadInProgress","newDbIndex","updateList","handleProgressEvent","event","_callee2","offlineUri","_context2","remove","debounced","func","wait","immediate","timeout","context","args","callNow","clearTimeout","setTimeout","debounce","_callee3","_context3","react","components_DownloadInProgress","appMetadata","downloaded","reverse","index","mainTrack","find","subTrack","components_DownloadItem","done","components_StorageInfo","max","Home","MediaItem","onClickDownload","poster","tagline","languages","qualities","isDownloadOptionsOpen","setIsDownloadOptionsOpen","customLanguage","setCustomLanguage","_useState5","_useState6","customSubtitles","setCustomSubtitles","_useState7","_useState8","customQuality","setCustomQuality","background","alt","src","minHeight","opacity","borderRadius","aria-haspopup","data-toggle","aria-labelledby","htmlFor","defaultValue","onChange","value","subtitle","MediaBrowser","history","searchTerm","setSearchTerm","paddingBottom","placeholder","video","includes","components_MediaItem","assign","videoId","getStoreInProgress","alert","v","store","manifestUri","Date","push","downloadVideo","MediaPlayer","match","videoEl","metadata","params","videoElement","saveVideoPlaybackTime","currentTime","playVideo","playState","playbackTime","confirmAlert","message","buttons","fetchAndPlayVideo","load","offlineVideo","attach","mode","detach","goBack","aria-hidden","maxHeight","controls","autoPlay","languageOptions","subtitleOptions","Configuration","name","checked","q","App","onUpdate","scrollTo","components_Nav","paddingTop","react_router","component","components_LoadingScreen","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","catch","ReactDOM","render","_ref6","children","_useReducer","useReducer","_useReducer2","Provider","src_App","getElementById","URL","process","href","origin","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.eaa2514d.chunk.js","sourcesContent":["import React, { useReducer } from 'react';\nimport Cookies from 'universal-cookie';\nimport shaka from 'shaka-player';\n\nexport const Store = React.createContext();\nconst cookies = new Cookies();\nconst initialConfiguration = {\n  language: 'en',\n  subtitles: 'en',\n  quality: 480,\n};\nconst initialState = {\n  configuration: initialConfiguration,\n  dbIndex: [],\n  isInit: false,\n  isSupported: true,\n  videos: [],\n  player: null,\n  storage: null,\n};\n\nconst init = async (dispatch) => {\n  const videosJsonPromise = fetch('data/videos.json').then(response => response.json());\n\n  shaka.polyfill.installAll();\n\n  const isShakaPlayerSupported = shaka.Player.isBrowserSupported();\n  const isShakaStorageSupported = shaka.offline.Storage.support();\n\n  if (isShakaPlayerSupported && isShakaStorageSupported) {\n    const player = new shaka.Player();\n    const storage = new shaka.offline.Storage(player);\n    const storageListPromise = storage.list();\n\n    const onError = (error) => {\n      console.error('Error code', error.code, 'object', error);\n    };\n    player.addEventListener('error', ({ detail }) => onError(detail));\n\n    const qualityValue = cookies.get('userPreferredQuality');\n\n    // get previous configuration from cookies\n    const configuration = {\n      language: cookies.get('userPreferredAudioLanguage') || initialConfiguration.language,\n      subtitles: cookies.get('userPreferredTextLanguage') || initialConfiguration.subtitles,\n      quality: qualityValue ? parseInt(qualityValue) : initialConfiguration.quality,\n    };\n\n    const trackSelectionCallback = (tracks) => {\n      // HACK: TODO MAYBE: no idea how to access the state inside this function, so I'll just use the cookie\n      // I would prefer to access the state\n      let quality = initialConfiguration.quality;\n      let language = initialConfiguration.language;\n      let subtitles = initialConfiguration.subtitles;\n\n      if (!!cookies.get('userPreferredQuality')) \n        quality = parseInt(cookies.get('userPreferredQuality'));  \n      if (!!cookies.get('userPreferredAudioLanguage'))\n         language = cookies.get('userPreferredAudioLanguage');\n      if (!!cookies.get('userPreferredTextLanguage'))\n         subtitles = cookies.get('userPreferredTextLanguage');\n\n      if (!!window.customConfig) {\n        quality = window.customConfig.quality;\n        language = window.customConfig.language;\n        subtitles = window.customConfig.subtitles;\n\n        window.customConfig = null;\n      }\n      player.configure({\n        preferredAudioLanguage: language,\n        preferredTextLanguage: subtitles,\n      });\n\n      const videoWithAudio = tracks\n        .sort((a, b) => a.height - b.height) // qualities are now sorted from worst to best\n        .filter(track => track.type === 'variant' && track.height <= quality); // choose all qualities smaller than the preferrence\n\n      const videoWithCorrectLanguage = videoWithAudio.filter(track => track.language === language);\n\n      const subtitlesTracks = tracks.filter(track => track.type === 'text').filter(track => track.language === subtitles);\n      console.log(subtitlesTracks);\n      //player.configure({ preferredTextLanguage: subtitles});\n      return [\n        ...subtitlesTracks,\n        videoWithCorrectLanguage.length > 0 ? videoWithCorrectLanguage.pop() : videoWithAudio.pop() // choose english when preferrence is not available\n      ];\n    }\n\n    // make shaka dispatch progress events so that we can have a progress bar when downloading\n    const progressCallback = (content, progress) => window.dispatchEvent(new CustomEvent('storage-progress', { detail: { content, progress } }));\n    player.configure({\n      offline: {\n        progressCallback,\n        trackSelectionCallback,\n      },\n      preferredAudioLanguage: configuration.language,\n      preferredTextLanguage: configuration.subtitles,\n    });\n\n    // get available videos from server\n    // and check offline storage (IndexedDB)\n    // simultaneously (both are async)\n    const [videos, dbIndex] = await Promise.all([\n      videosJsonPromise,\n      storageListPromise,\n    ]);\n\n    // start app\n    return dispatch({\n      type: 'INIT_DONE',\n      payload: {\n        configuration,\n        dbIndex,\n        isInit: true,\n        isSupported: isShakaPlayerSupported && isShakaStorageSupported,\n        player,\n        storage,\n        videos,\n      },\n    });\n  }\n\n  // not supported\n  return dispatch({\n    type: 'INIT_DONE',\n    payload: {\n      ...initialState,\n      isInit: true,\n      isSupported: false,\n    },\n  });\n};\n\nconst reducer = (state, { type, payload, dispatch }) => {\n  switch (type) {\n    case 'INIT':\n      init(dispatch);\n      return state;\n    case 'INIT_DONE':\n      return {\n        ...state,\n        isInit: payload.isInit,\n        isSupported: payload.isSupported,\n        videos: payload.videos,\n        dbIndex: payload.dbIndex,\n        configuration: payload.configuration,\n        player: payload.player,\n        storage: payload.storage,\n      };\n    case 'UPDATE_DB_INDEX':\n      return {\n        ...state,\n        dbIndex: payload.dbIndex,\n      };\n    case 'SET_CONFIG_LANGUAGE':\n      cookies.set('userPreferredAudioLanguage', payload, { path: '/' });\n      state.player.configure({ preferredAudioLanguage: payload });\n      return {\n        ...state,\n        configuration: {\n          ...state.configuration,\n          language: payload,\n        },\n      };\n    case 'SET_CONFIG_SUBTITLES':\n      cookies.set('userPreferredTextLanguage', payload, { path: '/' });\n      state.player.configure({ preferredTextLanguage: payload === 'none' ? '' : payload });\n      return {\n        ...state,\n        configuration: {\n          ...state.configuration,\n          subtitles: payload,\n        },\n      };\n    case 'SET_CONFIG_QUALITY':\n      cookies.set('userPreferredQuality', payload, { path: '/' });\n      return {\n        ...state,\n        configuration: {\n          ...state.configuration,\n          quality: payload,\n        },\n      };\n    default:\n      return state;\n  }\n}\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const value = { state, dispatch };\n\n  return (\n    <Store.Provider value={value}>\n      {children}\n    </Store.Provider>\n  );\n};\n\n","import React from 'react';\n\nconst LoadingScreen = () => (\n  <div className=\"container\" style={{ height: '100vh' }}>\n    <div className=\"row h-100 justify-content-center align-items-center\">\n      <div className=\"spinner-grow\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default LoadingScreen;\n","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = ({ routes }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOnline, setIsOnline] = useState(false);\n  const node = useRef();\n  const setIsOnlineTrue = () => setIsOnline(true);\n  const setIsOnlineFalse = () => setIsOnline(false);\n\n  useEffect(() => {\n    setIsOnline(window.navigator.onLine);\n    window.addEventListener('online', setIsOnlineTrue);\n    window.addEventListener('offline', setIsOnlineFalse);\n\n    return () => {\n      window.removeEventListener('online', setIsOnlineTrue);\n      window.removeEventListener('offline', setIsOnlineFalse);\n    };\n  }, []);\n\n  const handleClickOutside = e => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n    setIsOpen(false);\n  };\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isOpen]);\n\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark fixed-top\">\n      <NavLink\n        className=\"navbar-brand\"\n        exact\n        to=\"/\"\n      >\n        Shaka-O-Matik\n      </NavLink>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        aria-expanded={isOpen}\n        aria-label=\"Toggle navigation\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        className={`collapse navbar-collapse ${isOpen ? 'show': ''}`}\n        ref={node}\n      >\n        <div className=\"navbar-nav\">\n          {routes.map(({\n            exact,\n            key,\n            label,\n            path,\n          }) => (\n            <NavLink\n              activeClassName=\"active\"\n              className=\"nav-item nav-link\"\n              exact={exact}\n              key={key}\n              onClick={() => setIsOpen(false)}\n              to={path}\n            >\n              {label}<span className=\"sr-only\">(current)</span>\n            </NavLink>\n          ))}\n        </div>\n      </div>\n      {isOnline\n        ? <button type=\"button\" className=\"btn btn-success\" disabled>Online</button>\n        : <button type=\"button\" className=\"btn btn-danger\" disabled>Offline</button>\n      }\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    key: PropTypes.string.isRequired,\n    path: PropTypes.string.isRequired,\n    exact: PropTypes.bool,\n  })).isRequired,\n}\n\nexport default Nav;\n","import React, { useEffect, useState } from 'react';\n\nconst getStorageEstimate = async () => {\n  return navigator.storage.estimate().then(({ quota, usage }) => ({ quota: Math.round(quota/1000000), usage: Math.round(usage/1000000) }));\n}\n\nconst StorageInfo = () => {\n  const [storageInfo, setStorageInfo] = useState({ usage: 0, quota: 100 })\n\n  useEffect(() => {\n    // AFAIK it's impossible to listen to 'storage' events on the same page.\n    // These events are only fire if changes are made to indexedDB in another tab,\n    // so I just added an interval to check the storage estimate every x seconds.\n    if ('storage' in navigator && 'estimate' in navigator.storage) {\n      const storageEstimateInterval = setInterval(() => {\n        getStorageEstimate().then(setStorageInfo);\n      }, 5000);\n      getStorageEstimate().then(setStorageInfo);\n      return () => clearInterval(storageEstimateInterval);\n    }\n  }, []);\n\n  return (\n    <div className=\"card\" style={{ marginTop: '1rem' }}>\n      <div className=\"card-body\">\n        You have {storageInfo.quota}MB of accessible storage and currently use {storageInfo.usage}MB.\n        <div className=\"progress\" style={{ height: '2rem' }}>\n          <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{ width: `${storageInfo.usage/storageInfo.quota*100}%` }} aria-valuenow={storageInfo.usage} aria-valuemin=\"0\" aria-valuemax={storageInfo.quota}></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StorageInfo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst DownloadItem = ({\n  id,\n  removeMedia,\n  title,\n  downloadedOn,\n  language,\n  subtitles,\n  quality,\n}) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>downloaded on: {downloadedOn}</small>\n    <br />\n    <small>language: {language}</small>\n    <br />\n    <small>subtitles: {subtitles}</small>\n    <br /> \n    <small>quality: {quality}p</small>\n    <hr />\n    <div className=\"d-flex justify-content-between\">\n      <NavLink\n        className=\"btn btn-primary\"\n        to={`/offline/${id}`}\n      >Watch</NavLink>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={removeMedia}\n      >Remove</button>\n    </div>\n  </li>\n);\n\nDownloadItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  removeMedia: PropTypes.func.isRequired,\n};\n\nexport default DownloadItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DownloadInProgress = ({ title, dateStarted, progress }) => (\n  <li className=\"list-group-item\">\n    {title}\n    <br />\n    <small>started: {dateStarted}</small>\n    <hr />\n    <div className=\"progress\" style={{ marginBottom: '0.5rem' }}>\n      <div\n        className=\"progress-bar progress-bar-striped progress-bar-animated\"\n        role=\"progressbar\"\n        aria-valuenow={progress * 100}\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        style={{ width: `${progress * 100}%` }}\n      />\n    </div>\n  </li>\n);\n\nDownloadInProgress.propTypes = {\n  title: PropTypes.string.isRequired,\n  dateStarted: PropTypes.string.isRequired,\n  progress: PropTypes.number.isRequired,\n}\n\nexport default DownloadInProgress;\n","import React, {\n  Fragment,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { Store } from '../Store';\nimport StorageInfo from '../components/StorageInfo';\nimport DownloadItem from '../components/DownloadItem';\nimport DownloadInProgress from '../components/DownloadInProgress';\n\nconst debounce = (func, wait, immediate) => {\n\tlet timeout;\n\treturn function() {\n\t\tconst context = this, args = arguments;\n\t\tconst later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tconst callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};\n\nconst DownloadManager = () => {\n  const { state: { dbIndex, storage }, dispatch } = useContext(Store);\n  const [{ content, progress }, setDownloadInProgress] = useState({ content: null, progress: 0 });\n\n  useEffect(() => {\n    if (!storage) return;\n    const updateList = async () => {\n      const newDbIndex = await storage.list();\n      dispatch({ type: 'UPDATE_DB_INDEX', payload: { dbIndex: newDbIndex } });\n    };\n    updateList();\n  }, [dispatch, storage]);\n  \n  const handleProgressEvent = event => {\n    setDownloadInProgress(event.detail);\n  };\n  \n  useEffect(() => {\n    window.addEventListener('storage-progress', handleProgressEvent);\n    return () => { // clean up when unmounting\n      window.removeEventListener('storage-progress', handleProgressEvent);\n    };\n  }, []);\n\n  const removeMedia = async (offlineUri) => {\n    // TODO deleting while a download is in progress messes up the progress bar. thanks shaka\n    await storage.remove(offlineUri);\n    const newDbIndex = await storage.list();\n    dispatch({ type: 'UPDATE_DB_INDEX', payload: { dbIndex: newDbIndex } });\n  };\n  \n  const debounced = useRef(debounce(async () => {\n    // todo this can happen even if the component is not mounted\n    // this should reload the list of downloads after the progress updates have ceased\n    setDownloadInProgress({\n      content: null,\n      progress: 0,\n    });\n    const newDbIndex = await storage.list();\n    dispatch({ type: 'UPDATE_DB_INDEX', payload: { dbIndex: newDbIndex } });\n  }, 1000));\n\n  useEffect(() => {\n    content && debounced.current();\n  });\n\n  return (\n    <Fragment>\n      <ul className=\"list-group\">\n        {content &&\n          <DownloadInProgress title={content.appMetadata.title} progress={progress} dateStarted={content.appMetadata.downloaded} />}\n        {dbIndex.reverse().map(({ appMetadata, offlineUri, tracks }, index) => {\n          const mainTrack = tracks.find(track => track.type === 'variant');\n          const subTrack = tracks.find(track => track.type === 'text');\n\n          return (\n            <DownloadItem\n              title={appMetadata.title}\n              key={`download_${index}_${appMetadata.title}`}\n              done\n              id={appMetadata.id}\n              removeMedia={() => removeMedia(offlineUri)}\n              downloadedOn={appMetadata.downloaded}\n              language={mainTrack.language}\n              subtitles={subTrack ? subTrack.language : 'None'}\n              quality={mainTrack.height}\n            />\n          )})}\n      </ul>\n      <StorageInfo max={2000} current={500} />\n    </Fragment>\n  );\n};\n\nexport default DownloadManager;\n","import React from 'react';\n\nconst Home = () => (\n  <div className=\"jumbotron\">\n    <h1>Hello, world!</h1>\n    <p className=\"lead\">This is an App that demonstates offline storage and playback of videos with the Shaka player.</p>\n    <hr />\n      <p>There are many bugs and few features.</p>\n  </div>\n);\n\nexport default Home;\n","import React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nconst MediaItem = ({\n  id,\n  onClickDownload,\n  poster,\n  tagline,\n  title,\n  languages,\n  qualities,\n  subtitles,\n}) => {\n  const node = useRef();\n  const [isDownloadOptionsOpen, setIsDownloadOptionsOpen] = useState(false);\n  const [customLanguage, setCustomLanguage] = useState(languages[0]);\n  const [customSubtitles, setCustomSubtitles] = useState(!subtitles.length ? '' : subtitles[0]);\n  const [customQuality, setCustomQuality] = useState(qualities[0]);\n  const handleClickOutside = e => {\n    if (node.current.contains(e.target)) {\n      return;\n    }\n    setIsDownloadOptionsOpen(false);\n  };\n  useEffect(() => {\n    if (isDownloadOptionsOpen) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    } else {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [isDownloadOptionsOpen]);\n\n  return(\n    <div className=\"col-md-6\" style={{ marginBottom: '1rem' }}>\n      <div className=\"card bg-dark text-white\" style={{ background: 'black' }}>\n        <img\n          alt={`image_${title}`}\n          className=\"card-img-top\"\n          src={poster}\n          style={{ minHeight: '10rem', opacity: '0.4', borderRadius: '.25rem' }}\n        />\n        <div className=\"card-img-overlay d-flex justify-content-between flex-column\">\n          <h5 className=\"card-title\">{title}</h5>\n          <p className=\"card-text\">{tagline}</p>\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"btn-group\" role=\"group\">\n              <button\n                className=\"btn btn-secondary\"\n                onClick={onClickDownload}\n                type=\"button\"\n                title=\"Download with default configuration\"\n              >\n                Download\n              </button>\n              <button\n                aria-expanded=\"false\"\n                aria-haspopup=\"true\"\n                className=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\"\n                data-toggle=\"dropdown\"\n                id={`dropdown_download_options-${id}`}\n                onClick={() => setIsDownloadOptionsOpen(true)}\n                type=\"button\"\n                title=\"Download with custom configuration\"\n              >\n                <span className=\"sr-only\">Toggle Download Options Dropdown</span>\n              </button>\n              <div\n                aria-labelledby={`dropdown_download_options-${id}`}\n                className={`dropdown-menu dropdown-menu-right\"${isDownloadOptionsOpen ? ' show' : ''}`}\n                ref={node}\n              >\n                <form className=\"px-4\">\n                  <div className=\"form-group row\">\n                    <label className=\"col-form-label col-form-label-sm\" htmlFor={`dropdown_download_options-${id}-language`}>Language</label>\n                    <select\n                      className=\"custom-select custom-select-sm\"\n                      defaultValue={customLanguage || ''}\n                      id={`dropdown_download_options-${id}-language`}\n                      onChange={e => setCustomLanguage(e.target.value)}\n                    >\n                      {languages.map((language, index) => <option key={`dropdown_download_options-${id}-language-${index}`} value={language}>{language}</option>)}\n                    </select>\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-form-label col-form-label-sm\" htmlFor={`dropdown_download_options-${id}-subtitles`}>Subtitles</label>\n                    {subtitles.length ? (\n                      <select\n                        className=\"custom-select custom-select-sm\"\n                        value={customSubtitles || ''}\n                        id={`dropdown_download_options-${id}-subtitles`}\n                        onChange={e => setCustomSubtitles(e.target.value)}\n                      >\n                        {subtitles.map((subtitle, index) => <option key={`dropdown_download_options-${id}-subtitles-${index}`} value={subtitle}>{subtitle}</option>)}\n                        <option value=\"none\">None</option>\n                      </select>\n                      ) : (\n                        <select\n                          className=\"custom-select custom-select-sm\"\n                          value=\"none\"\n                          id={`dropdown_download_options-${id}-subtitles`}\n                          disabled\n                        >\n                          <option value=\"none\">None</option>\n                        </select>\n                      )}\n                  </div>\n                  <div className=\"form-group row\">\n                    <label className=\"col-form-label col-form-label-sm\" htmlFor={`dropdown_download_options-${id}-quality`}>Quality</label>\n                    <select\n                      className=\"custom-select custom-select-sm\"\n                      defaultValue={customQuality || ''}\n                      id={`dropdown_download_options-${id}-quality`}\n                      onChange={e => setCustomQuality(e.target.value)}\n                    >\n                      {qualities.map((quality, index) => <option key={`dropdown_download_options-${id}-quality-${index}`} value={quality}>{quality}p</option>)}\n                    </select>\n                  </div>\n                  <button\n                    className=\"btn btn-secondary btn-sm\"\n                    onClick={() => {\n                      window.customConfig = {\n                        language: customLanguage,\n                        subtitles: customSubtitles,\n                        quality: customQuality,\n                      }\n                      onClickDownload();\n                     }}\n                    type=\"button\"\n                  >\n                    Download\n                  </button>\n                </form>\n              </div>\n            </div>\n            <NavLink\n              className=\"btn btn-primary\"\n              exact\n              role=\"button\"\n              to={`/stream/${id}`}\n            >Watch now!</NavLink>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMediaItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  onClickDownload: PropTypes.func.isRequired,\n  poster: PropTypes.string.isRequired,\n  tagline: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default MediaItem;\n","import React, { Fragment, useContext, useState } from 'react';\nimport { Store } from '../Store';\nimport MediaItem from '../components/MediaItem';\n\nconst MediaBrowser = ({ history }) => {\n  const {\n    state: {\n      dbIndex,\n      storage,\n      videos,\n    },\n   } = useContext(Store);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const downloadVideo = (videoId) => {\n    if (!storage.getStoreInProgress()) { // only one download at a time with shaka\n      if (dbIndex.find(v => v.appMetadata.id === videoId)) { // check if already in storage\n        alert('You already have the video in your library.');\n        return;\n      }\n      const video = videos.find(v => v.id === videoId);\n      storage.store(video.manifestUri, {\n        downloaded: Date(),\n        id: video.id,\n        title: video.title,\n      });\n      history.push('/downloads');\n    } else alert('Download already in Progress!');\n  };\n\n  return (\n    <Fragment>\n      <form className=\"input-group\" style={{ paddingBottom: '1rem' }}>\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"Search\"\n          onChange={e => setSearchTerm(e.target.value)}\n          value={searchTerm}\n        />\n        {searchTerm && <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-outline-secondary\"\n            onClick={() => setSearchTerm('')}\n          >\n            Clear\n          </button>\n        </div>}\n      </form>\n      <div className=\"row\">\n        {videos.filter(video => video.title.includes(searchTerm)).map((video, index) => (\n          <MediaItem\n            {...video}\n            key={`media_${index}_${video.title}`}\n            onClickDownload={() => downloadVideo(video.id)}\n          />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default MediaBrowser;\n","import React, { useEffect, useRef, useContext } from 'react';\nimport { Store } from '../Store';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\nconst MediaPlayer = ({ match, history }) => {\n  const videoEl = useRef(null); // reference to the <video> element\n\n  const {\n    state: {\n      player,\n      storage,\n      videos,\n    },\n  } = useContext(Store);\n  const metadata = videos.find((video => video.id === match.params.id)); // get id from URL, metadata from datastore\n\n  useEffect(() => {\n\n    // make linter happy\n    const videoElement = videoEl.current;\n    // attach player to video tag\n\n    const saveVideoPlaybackTime = () => {\n      if (videoElement.currentTime !== 0) {\n          cookies.set(\"videoPlaybackTime:\"+ metadata.id,videoElement.currentTime);\n       }\n    };\n\n    videoElement.addEventListener('pause', saveVideoPlaybackTime);\n    videoElement.addEventListener('ended', saveVideoPlaybackTime);\n\n    const playVideo = (playState) => {\n\n      let playbackTime = cookies.get(`videoPlaybackTime:${metadata.id}`);\n      if (!!playbackTime && parseInt(playbackTime) !== 0) {\n          confirmAlert({\n            title:'Resume Playback?',\n            message: 'Would you like to resume this video where you left off?',\n            buttons: [\n              {\n                label: 'Yes',\n                onClick: () =>  fetchAndPlayVideo(playState, playbackTime)   \n              },\n              {\n                label: 'No',\n                //reset saved playbackTime to 0\n                onClick: () => \n                {\n                  cookies.set(\"videoPlaybackTime:\"+ metadata.id,0);\n                  playbackTime=0;\n                  fetchAndPlayVideo(playState, playbackTime)  \n                }             \n              }\n            ]\n          });\n      } else {\n        fetchAndPlayVideo(playState, playbackTime);\n      }\n    }\n\n    const fetchAndPlayVideo = (playState, playbackTime) => \n    {\n      playState==='stream' ? player.load(metadata.manifestUri, playbackTime) : storage.list().then((list) => { \n        // get offlineUri from storage\n        const offlineVideo = list.find(video => video.appMetadata.id === match.params.id);\n        player.load(offlineVideo.offlineUri, playbackTime); \n    });\n  }\n\n\n    player.attach(videoElement);\n\n    if (match.params.mode === 'stream') {\n      playVideo('stream');\n    } else { // mode === 'offline'\n      playVideo('offline');\n    }\n    return () => {\n      // detach player from element when component unmounts\n      player.detach(videoElement);\n      saveVideoPlaybackTime();\n      videoElement.removeEventListener('pause', saveVideoPlaybackTime);\n      videoElement.removeEventListener('ended', saveVideoPlaybackTime);\n    };\n  }, [match, metadata, player, storage]); // run this effect only when it is first mounted or these values change\n\n  return (\n    <div className=\"card bg-light\">\n      <div className=\"card-header\">\n        {metadata ? metadata.title : '404'}\n        <button\n          type=\"button\"\n          className=\"close\"\n          aria-label=\"Close\"\n          onClick={history.goBack}\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div className=\"card-body\">\n        {metadata ? (\n          <video\n            ref={videoEl}\n            style={{ width: '100%', maxHeight: '80vh' }}\n            poster={metadata.poster}\n            controls\n            autoPlay\n          />\n        ) : 'Video not found.'}\n      </div>\n    </div>\n  );\n};\n\nexport default MediaPlayer;\n","import React, { useContext } from 'react';\nimport { Store } from '../Store';\n\nconst languageOptions = [\n  {\n    label: 'English',\n    id: 'en',\n  },\n  {\n    label: 'Deutsch',\n    id: 'de',\n  },\n  {\n    label: 'Français',\n    id: 'fr',\n  },\n];\nconst subtitleOptions = [\n  ...languageOptions,\n  {\n    label: 'None',\n    id: 'none',\n  },\n];\n\nconst Configuration = () => {\n  const { state, dispatch } = useContext(Store);\n  const { configuration } = state;\n\n  return (\n    <div className=\"form-check\">\n      <form>\n        <fieldset className=\"form-group\">\n          <div className=\"col\">\n            <div className=\"row\">\n              <legend className=\"col-form-label col-sm-2 pt-0\">Preferred Language</legend>\n              <div className=\"col\">\n                {languageOptions.map(({ label, id }) => (\n                  <div className=\"form-check\" key={`key_language_${id}`}>\n                    <input \n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"languageRadios\"\n                      id={`language_${id}`}\n                      value={id}\n                      checked={id === configuration.language}\n                      onChange={e => dispatch({\n                        type: 'SET_CONFIG_LANGUAGE',\n                        payload: e.target.value,\n                      })}\n                      />\n                    <label className=\"form-check-label\" htmlFor={`language_${id}`}>\n                      {label}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"row\">\n              <legend className=\"col-form-label col-sm-2 pt-0\">Preferred Subtitles</legend>\n              <div className=\"col\">\n                {subtitleOptions.map(({ label, id }) => (\n                  <div className=\"form-check\" key={`key_subtitles_${id}`}>\n                    <input \n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"subtitleRadios\"\n                      id={`subtitles_${id}`}\n                      value={id}\n                      checked={id === configuration.subtitles}\n                      onChange={e => dispatch({\n                        type: 'SET_CONFIG_SUBTITLES',\n                        payload: e.target.value,\n                      })}\n                      />\n                    <label className=\"form-check-label\" htmlFor={`subtitles_${id}`}>\n                      {label}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"row\">\n              <legend className=\"col-form-label col-sm-2 pt-0\">Preferred Video Download Quality</legend>\n              <div className=\"col\">\n                {[1080, 720, 480].map(q => (\n                  <div className=\"form-check\" key={`key_quality_${q}`}>\n                    <input\n                      className=\"form-check-input\"\n                      type=\"radio\"\n                      name=\"qualityRadios\"\n                      id={`quality_${q}`}\n                      value={q}\n                      checked={q === configuration.quality}\n                      onChange={e => dispatch({\n                        type: 'SET_CONFIG_QUALITY',\n                        payload: parseInt(e.target.value),\n                      })}\n                      />\n                    <label className=\"form-check-label\" htmlFor={`quality_${q}`}>\n                      {q}\n                    </label>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n  );\n\n};\n\nexport default Configuration;\n","import React, { useEffect, useContext, Fragment } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Store } from './Store';\nimport LoadingScreen from './components/LoadingScreen';\nimport Nav from './components/Nav';\nimport DownloadManager from './routes/DownloadManager';\nimport Home from './routes/Home';\nimport MediaBrowser from './routes/MediaBrowser';\nimport MediaPlayer from './routes/MediaPlayer';\nimport Configuration from './routes/Configuration';\n\nconst routes = [\n  {\n    exact: true,\n    key: 'media',\n    label: 'Media',\n    path: '/media',\n  },\n  {\n    exact: true,\n    key: 'downloads',\n    label: 'Downloads',\n    path: '/downloads',\n  },\n  {\n    exact: true,\n    key: 'configuration',\n    label: 'Configuration',\n    path: '/configuration',\n  },\n];\n\nconst App = () => { \n  const { state: { isInit, isSupported }, dispatch } = useContext(Store);\n\n  useEffect(() => {\n    !isInit && dispatch({ type: 'INIT', dispatch });\n  });\n\n  if (!isInit) return <LoadingScreen />;\n\n  if (!isSupported) return (\n    <div className=\"alert alert-danger\" role=\"alert\">\n      <h4 className=\"alert-heading\">Browser not supported!</h4>\n      <hr />\n      Unfortunately your browser does not support all required technologies. Please update your browser. Safari on iOS is not supported, but Chrome and Firefox on iOS are.\n    </div>\n  );\n\n  return (\n    <Router onUpdate={() => window.scrollTo(0, 0)}>\n      <div className=\"App\">\n        <Nav routes={routes} />\n        <main className=\"container\" style={{ paddingTop: '4.5rem' }}>\n          <Fragment>\n            <Route\n              component={Home}\n              exact\n              path=\"/\"\n            />\n            <Route\n              component={MediaBrowser}\n              exact\n              path=\"/media\"\n            />\n            <Route\n              component={DownloadManager}\n              exact\n              path=\"/downloads\"\n            />\n            <Route\n              component={MediaPlayer}\n              exact\n              path=\"/:mode(stream|offline)/:id\"\n            />\n            <Route\n              component={Configuration}\n              exact\n              path=\"/configuration\"\n            />\n          </Fragment>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/custom-sw.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { StoreProvider } from './Store';\n\nReactDOM.render(\n  <StoreProvider>\n    <App />\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}